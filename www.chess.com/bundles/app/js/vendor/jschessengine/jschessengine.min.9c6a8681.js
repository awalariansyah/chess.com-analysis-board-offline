var JCE=function(){"use strict";var BOOK_READER=function(){var zobristPiece=[[2637767806,863464769],[720845184,95069639],[1155203408,610415943],[2618685246,1655139042],[1971536997,1218186377],[848342074,540017087],[263957791,1627660921],[3896152207,4076560586],[226391645,1484086288],[436746274,3467632685],[2516964848,3797861296],[3491888988,3510251221],[1086189917,1248276018],[18044180,1876255637],[1572111136,1190386149],[597658413,2146900428],[97624494,2243205793],[1738507407,1854916977],[1950989311,2149575947],[2098318769,3283594736],[2194108574,2015279052],[4079062812,2500884588],[856979699,2941369318],[1270058469,3877737539],[2858720366,3170717948],[2378012835,1387254795],[2278688587,2178388503],[435406673,3555273441],[3031118064,1655806655],[2063925420,1107589828],[3376753832,436852829],[615148625,1302492416],[1285502018,1963045959],[346460119,1016137793],[2803604355,1176288659],[55085973,2968618255],[1669016372,4287873088],[164740250,1037634196],[896886403,883023163],[1935551383,2764331555],[410153072,4055711755],[533441746,1505690343],[3541084098,3466290517],[3214426080,4267541060],[2675233103,1951705124],[1374411850,3115986997],[1552073989,3684348154],[4244110986,875606593],[844343081,3115990494],[2356462440,135999605],[3116133511,377238503],[2129956651,2197966368],[299173332,3276914047],[1701379241,745972291],[1306570996,254977976],[2530644806,214138461],[1122123979,1667800879],[1831591130,3801192033],[1116211970,920967505],[1594837592,2551651254],[972591349,2046373768],[2479207924,1935030411],[1675376029,2367888248],[3960916618,3935874422],[1398143232,3265801671],[133930885,1520005442],[1351827834,2829577566],[2076951437,2723839804],[435980918,2364847828],[1668970368,3738157273],[2185864314,3993911799],[2041407829,31969768],[346864372,2004703094],[4047877822,3437142421],[3669961416,538399484],[616810829,4190688246],[3144558884,4030272234],[216165387,2513010905],[2761740594,3216997572],[3919406634,4096014649],[669429112,2434161727],[2234904640,3111407601],[1421079802,1598085235],[1924213810,310373675],[4002762044,2067865415],[2592451728,2586110625],[1890340057,4031717877],[4189625662,2577429954],[2276713138,3049850801],[2741429688,3310307512],[2924122950,3426712818],[421576781,1193704381],[2277442246,3030264553],[153237420,595540057],[4278711886,4176286928],[2380848297,4030514510],[2618700582,1303682185],[3018992701,185284845],[957243316,1291916363],[1543415220,1898408169],[504378001,531073412],[2591337657,1692896435],[1333852064,903543556],[1661259930,188168388],[561112646,2197961224],[1536910315,2632972300],[1349168372,2307429186],[411152329,2745631190],[1694697476,1081411140],[3755185459,2631660711],[4019355068,4027326706],[2066937809,3761668332],[3120395808,3878773315],[94890149,2109283191],[3045629038,358812277],[1249184265,3465901047],[3477490924,2308583306],[4114113436,3875911716],[1014604031,1434513279],[3991324799,2222416029],[2040431088,1539915569],[2253613964,4081224332],[2547464012,1611168627],[2722521980,4281500978],[71289574,213969824],[2450408597,903689630],[1894451515,364024012],[1939968537,374938813],[1447259295,3785468557],[4021046128,1664847745],[3139524504,3562928047],[1173487682,4065269608],[2467266804,3907744866],[4284945151,3486998177],[2925674454,1953016432],[3710671816,1271453948],[2129465869,1422863833],[587093076,18243356],[3373793513,2411305257],[2156648078,1791034213],[3737413652,1534461430],[468575139,2935304962],[1129551363,3603256834],[2861996892,1763494778],[2826449619,2465197654],[1704209531,1014895022],[3738359347,3402630390],[569410928,4095796581],[3021312909,2108247612],[2444777957,2664129360],[282063667,3773661258],[682545472,3188439005],[3318488457,1917822038],[1447622272,4045023041],[757420137,4038580915],[2613420942,4146703316],[4012836163,150381244],[2938127093,3428591704],[1208226490,3086335530],[2935205706,1446903363],[430957978,3830532479],[1381578755,3757172800],[4109399782,1596778224],[288855589,1954372339],[3169178148,2256716053],[2644780093,3895892303],[107966643,1071681559],[1304747544,2607225372],[1359190711,1898207171],[3229237120,3273634996],[3027167685,3863637628],[3011615298,2883984519],[564135827,978463264],[770797430,362326607],[1983662611,1907583229],[4153656423,48268960],[3609759233,720080177],[3727911466,1270989899],[200708787,2366086947],[744508026,393422515],[1213261630,65757284],[3485747185,3845951003],[2958861301,1680248217],[2598470344,3163845864],[2767997908,4233451722],[3881113485,1492930166],[1773764017,2764062206],[4189435844,2898689174],[4234838742,1267095035],[2624081078,3302114327],[2395569449,390426320],[1728307101,690284926],[3309827454,1118258254],[2028172868,3888829086],[4271523049,909051386],[146617804,942892565],[2467685867,974297806],[2483428231,503635829],[3743260573,2018222096],[1002067894,2289153437],[3535252974,3738302271],[4154611160,1002664952],[3623154244,2349656961],[3646679180,3524329383],[862933752,4282853607],[2806008282,3272780913],[2734037942,3828874677],[1328176304,2137666995],[2278785213,2780788825],[381286368,1816476193],[2074232908,2316293454],[4087773386,3651330956],[967884669,3728964514],[4239349185,3213509668],[419231360,1463788948],[1275421624,2672384707],[1088456595,436245261],[2365565249,783696577],[1758083333,845223583],[2048846183,3530914274],[2635948261,124738415],[940630937,3069598626],[839474029,1253439921],[902477345,165479306],[2836079689,2681188273],[2007115168,2093139645],[1363041891,1282466609],[1130479818,1063857938],[3644959908,1260430427],[1385135238,46497915],[1386975934,3110156681],[2635987502,4233461619],[1915744629,4117939016],[487743653,285736599],[2049219159,3960249250],[69242857,3908563670],[1511066720,1488527520],[215590039,1703564952],[1459430344,4184955468],[676103291,2642967214],[83799035,3182827979],[1949179493,476101251],[2593534694,1493478716],[2283504289,995211746],[1349412676,3449243940],[2954378677,1878813305],[249149717,3329151870],[1578231917,1483986052],[4135085182,890874990],[461755528,3505523909],[3669622373,634949665],[219487622,2914465301],[2825233742,3703631897],[2479105382,2935590907],[2582097898,3187672881],[1221328648,1843341402],[2140891889,3958868911],[1482849818,345750049],[751922730,3178831411],[3546542069,4036458902],[216179596,877293293],[444615341,3117393729],[2424254530,494454238],[1344234989,3003337991],[929188581,2760877801],[2507911009,1879899982],[980166547,1311840394],[3566535507,1790747461],[143525013,2311336672],[4181962471,4273938872],[1815842366,862009811],[911175674,1179575598],[3591335374,3694215714],[1452686093,3393294272],[385158879,2447709103],[4011414929,1264623507],[1448477120,911094312],[3971299641,2289992053],[3133647265,2234591563],[3007628400,964409938],[1708345684,3673411261],[3031964479,2843021794],[3022128657,2480338599],[118850112,473449293],[2048127371,3202109429],[3158349745,382018770],[1505327237,3807570472],[2568424029,3272693060],[1866609495,3888556537],[844703982,1852802964],[3504617058,682636099],[1448882679,3733580327],[821387540,2215744532],[3631471417,311618895],[2077838877,2383929020],[3352949096,1688694420],[2491080787,3998672444],[3368630402,4182204255],[983299419,2837414346],[3651215291,1033373924],[265429091,3988955082],[3019003608,2896212153],[2955948456,3025235588],[903690197,2266253487],[3925215275,89402958],[3959093811,3609545561],[2455088053,223552128],[3115011301,2133669107],[1765081558,673805649],[3324795129,2111392191],[3443871631,432345706],[3152559950,3425427147],[3699649406,672784944],[3129545774,7668664],[2747044893,173040075],[3925243406,852328481],[164095314,3161868591],[2234471571,1302682825],[2164784335,105893718],[159995093,536831360],[599199451,425051327],[3274759746,1680930461],[1192619331,3903085578],[2832721114,3078660237],[91404660,4030521531],[3044880024,1578375623],[3906596030,754177855],[803516785,1894094672],[288455592,2030430096],[2143232492,2317305324],[388352703,3406060288],[2521731420,3588403719],[1043041227,4028028525],[3195290851,2468913324],[4166724431,3168683191],[1228226538,968516529],[500177583,3444787306],[533367442,4252082053],[4236023256,657816314],[413575568,3367198397],[3435884549,3334062733],[1004255532,1135705894],[2859513268,4170618274],[3914086821,1251487871],[3080761716,3489067886],[3571165255,699353261],[773372954,3648014952],[769693293,2939128604],[3116440923,507748478],[1687629160,3739431776],[2489486648,3502376324],[3686847158,2878383449],[3530767427,902211375],[2121652637,2493976397],[1827477891,930064171],[2549918411,4029725732],[2071415163,844118802],[2236083679,3088894868],[2040110303,4144562891],[3489536313,1133419300],[2190878435,2301466071],[2465915458,2448602097],[1675766804,2073834499],[3329799896,1613253148],[1483966600,1348836071],[159505618,2527621997],[2674227354,1695130688],[2683539437,1927873839],[3833196123,2570082188],[3891433165,759819981],[1455453349,2179602430],[1430583255,1957776111],[2067726741,4235143439],[303380021,2998980439],[2136024795,3126725799],[2054591852,1051702291],[1029141665,489794361],[2317027384,569642164],[2068461795,624418658],[2499875684,1830645251],[1302894490,4319401],[1002663431,2406815191],[1560941298,2060652753],[2141002286,515773223],[3661248027,475092913],[3705503008,2419919909],[914567990,3496539911],[3462935583,2039034761],[2878378006,2379243316],[1133857586,1390159333],[3023618742,2140726761],[282908558,944874642],[3686955701,1148723903],[2604456805,4163675010],[3061545110,377179268],[3218002352,76459088],[2836503392,916455101],[536836808,151306053],[2886925079,404221671],[2936593041,2011015485],[453815187,1852163908],[3042568989,82176306],[3279635891,4174836410],[3282689058,2360003049],[4088968807,1516570623],[2680453086,1322680794],[1731693966,3438253771],[1842894553,1294307894],[2736377365,2964642609],[121205621,521330014],[2324595870,3005710757],[3784465521,676493813],[1958759409,2030833406],[1306150933,1016370058],[2636541290,482366508],[1950415745,1695073534],[322077955,3746046623],[3602873262,3829181504],[1211684447,1861645455],[504701736,4080111082],[2407799203,1223857855],[1925743434,1498920209],[3617596327,845198428],[2498480299,3484773806],[2680229135,2560201696],[3731399221,1536412390],[2756509305,2924710846],[2635957500,3459716133],[1372762539,769635894],[802677945,3878474636],[1707760534,3075809808],[3714687192,2872792173],[1615679922,1606381794],[1940556374,1337437342],[445390489,731124040],[2864974375,64601760],[1984806574,2141516710],[513390958,1890172555],[744398315,1475299139],[982749166,852662657],[652663695,4260736510],[1184061125,82616221],[3363191899,147951756],[1064069880,1507328085],[2138882964,547595589],[2616926846,3186935246],[2298715513,3606862940],[2414381911,811477686],[2694745228,900437726],[4202576185,2201114451],[3602305260,3323446937],[3756663274,2658490339],[3061587876,2171079416],[3390977925,2850497765],[486312941,224925241],[3515712841,3510684394],[1322319486,2647200565],[3839619171,1148450258],[392296762,1154854654],[1401523788,957405781],[1934485528,527352730],[645968162,3131215255],[696971825,3361451947],[2038689491,1946699733],[1723966113,2785859721],[2652365974,1118037185],[3988018407,3134982149],[1354171594,3053634345],[1287854075,2631782435],[1723106141,2662328866],[563845090,1878819261],[639520332,171129501],[534957223,1696062352],[3612364282,2283204027],[3109494688,1304463816],[500957989,630925278],[3477030536,2149497258],[4109750364,281719363],[951472732,564407054],[922095147,2767874048],[3946156928,829677774],[2622281253,2086286851],[2936811901,850242186],[630086272,3340782667],[2340986210,1296336989],[4107355543,3865114709],[3560210278,3968418243],[3868847493,2967450637],[611513888,2083325060],[3265390517,3025776309],[2874106961,3424470508],[1668707698,2923258228],[2778598353,24320552],[292356118,3415510793],[754567370,86994591],[185141877,1621715171],[2884558258,3722473457],[1492107531,111281805],[3336927864,4225337056],[782994598,1021838039],[346133860,18281270],[2080909533,1649329040],[3612065399,3859901127],[2151962287,284556115],[3957975594,3745718727],[52533817,3998775856],[1232633839,397383972],[2716413964,3629253960],[1531307298,3836851439],[3030137657,2500401718],[3561556693,653345841],[313061910,2945718466],[2065276,3342140708],[410498334,1470588117],[2726640512,4051654894],[2570984935,758567696],[3008987264,3462702678],[623860175,228525243],[3527183895,1829844480],[467272850,3890501742],[568376656,650516927],[990477018,4035508558],[2366955227,817792110],[4183621538,989198068],[946958343,1639184195],[3395758993,3924097558],[1690887473,3220519765],[605184237,1255270525],[275515833,1926424610],[2142902612,283494960],[2021972412,1823828440],[105373677,3448326697],[1666662384,1042433908],[1338566998,261206307],[498685668,1344755577],[3101233780,3119109371],[2733370951,3808165089],[3656512268,3449289481],[4025308119,1607880299],[778896067,1612183167],[2846510368,3674754715],[3058428120,2991822529],[1892379383,3268787440],[2565895844,4154602030],[3213117192,98999135],[2495816991,116985075],[1040203361,1785041385],[3106252493,69316595],[1639829808,2087117568],[3213709576,3799911752],[604681594,2340981536],[4236730699,2938666503],[4009938384,1878897714],[2701667332,1725918218],[2182473079,1258184],[3550198211,2760750799],[657991062,875584532],[1640976276,3380476221],[460041378,2924352091],[1972323596,2287414795],[2510248061,1350206297],[2959337826,3762681165],[1625877874,3235902929],[2070189957,1429368735],[4245163299,1839731898],[2358312347,138364248],[275739390,2179122576],[2037777210,972544338],[2766930226,1984733259],[1933485829,4209310327],[3034118011,3286589799],[2653025529,62078937],[2641780289,2679545709],[3540781195,2787026415],[1569993599,3215949659],[441337890,3947723353],[1878946792,459505587],[3724105660,920173002],[1691411102,3934795955],[148741087,3647709027],[142506469,2776440083],[3811107376,3823285243],[472209891,252266174],[1913386482,1867329194],[2960608550,482740699],[1145005292,1513558421],[1091751784,1687823886],[3625186042,3086337482],[1712140887,940065262],[1504455800,1945702563],[3896940088,2003245591],[2478191531,4197739e3],[3233871270,250924495],[3404865229,1131917964],[1462204167,429621621],[1349259705,3641608989],[3627860584,2048468319],[1244251718,1513180369],[3979211282,371413143],[3043187861,4285699810],[581894202,3060983825],[1390895705,1811317301],[2599134010,3337406128],[2488233440,2436161462],[1816641224,2208816697],[1792034756,815866116],[2779893723,2695577703],[2084952115,2951772258],[1351806869,169269771],[2469979804,86740603],[1163545420,4264616949],[1795352113,2511146232],[1796715044,3134635815],[3521170642,1538900329],[3725363621,1455009392],[1342594643,1512127734],[2618386938,662157428],[2028859350,2494504685],[1841905045,648351336],[4002935891,4033319405],[850071259,1768358867],[979915719,3876018087],[830889197,1629549437],[1744763229,2455795856],[522919199,368499868],[3063822504,2522639205],[2861636095,407686388],[4097602344,1945259027],[4215946617,1251639506],[894485042,534122652],[924809191,1807237502],[1811585710,1589663609],[3439653887,1722232],[3810997538,105152714],[2677100683,4291805514],[77233985,102407776],[4239834691,2851274395],[148802076,2006440603],[2409138150,126301601],[3048474397,3217504870],[588133437,4221603123],[1139638106,263087485],[982032635,3165674595],[562514827,1294842959],[467575086,905357513],[1405117894,3370530088],[3813285157,242912619],[3601878331,1985076606],[1586505598,2092146221],[738488098,103663229],[2970334297,321718822],[1068097019,1742926233],[235518094,420804527],[283685722,4092504887],[2666392744,3799169331],[3569817788,1256762975],[2169728352,292617248],[2444571896,2239859206],[3967907832,1066404216],[420376911,2913277294],[3046293305,2956347747],[2311278792,2477686209],[2885955184,4172514290],[3030078181,2275536480],[4212469731,4280736393],[1046900335,1773022229],[995380926,1414273529],[3892683234,2429494358],[615726237,2127712535],[3880203074,2071130305],[176180504,3070850165],[1474506861,2283723599],[1256707747,1857412043],[764236850,359687368],[3521530334,511649419],[2318567964,3992868140],[128167623,2518992858],[2220129756,1042300052],[2567608573,1349636707],[441446694,384760969],[4143447316,829506048],[817912603,2738025500],[2368091832,357934982],[1187643061,1561463042],[3438021235,3030161697],[1318922279,895468690],[434876457,1130220303],[1180291767,1132759596],[2520707785,1798553137],[1962430872,2958700157],[1510954061,3534879512],[57831539,3269538993],[3354831405,3852135009],[891783098,2698494511],[2555636406,996018997],[2881342935,3982231648],[3473267445,2894952368],[1238029452,3958679326],[2051805420,559465638],[3655936674,1186951582],[330209165,167662935],[1929681327,2450868735],[1313566811,2458925988],[4283920930,3243182650],[1438004300,4185567150],[3093439067,89876832],[3401620219,3721579956],[3673745794,2682874719],[3053321309,825410712],[822915968,3681514755],[3900685126,561657358],[553823814,1857753416],[4166295066,983949325],[128359165,3426887194],[3300989119,3884968622],[4193552686,3647722552],[452189154,1569670618],[4122259632,3537825460],[2519387887,2821594244],[74333898,2940550377],[4032631446,2173999692],[2521268686,1934310532],[2620314688,2177785789],[1378755571,2455646622],[394133753,4231198609],[734399075,2800989170],[573292462,1634883078],[1214417373,3426576256],[2110224475,2399009920],[2331215665,3224086912],[531326186,698539511],[3839443603,583861850],[2644531398,2017784332],[616620850,3070237104],[590349237,2798642861],[3582377217,3317831670],[1582708616,1596570667],[2126148205,2358511947],[173450736,3219362418],[3616831144,1323437318],[2655785577,3131359031],[401600069,2967397952],[496349349,4244179910],[2479612086,2579650653],[1710903074,2049666425],[3589924952,690291925],[3266682943,1900485231],[1496318498,3025542656],[3459221058,3389461212],[2091479615,3140389256],[663040899,1207089672],[3323704225,1105530508],[353318429,2879253542],[2674540957,941987316],[1688550857,620657353],[338551967,4286217277],[204689992,2239736295],[178008789,3940832005],[3871613304,3300636974],[1911672356,2429684487],[4055679954,1974461722],[3878217928,1009991796],[2533095482,310920740],[2174833823,3596041637],[1604814460,2939543881],[1452830254,4092397851],[2441027029,4169690209],[3524103304,3372213855]];
var zobristCastle=[[836181454,1689436944],[2776523577,3710710688],[4049974663,3750330768],[519497435,2979405513]];var zobristEnPassant=[[1892447193,197291556],[3793382197,3742120663],[3838936,2994760034],[479846099,1018728609],[3476112862,182272649],[3504620154,1427438450],[2009473484,2679350403],[1738755500,1129731339]];
var zobristTurn=[4174784170,2938602761];var zobristPieceValue={p:0,P:1,n:2,N:3,b:4,B:5,r:6,R:7,q:8,Q:9,k:10,K:11};var zobristPieceValueNumbers=[];
zobristPieceValueNumbers[5]=1;zobristPieceValueNumbers[6]=0;zobristPieceValueNumbers[9]=3;zobristPieceValueNumbers[10]=2;zobristPieceValueNumbers[17]=5;
zobristPieceValueNumbers[18]=4;zobristPieceValueNumbers[33]=7;zobristPieceValueNumbers[34]=6;zobristPieceValueNumbers[65]=9;zobristPieceValueNumbers[66]=8;
zobristPieceValueNumbers[129]=11;zobristPieceValueNumbers[130]=10;var enPassantMasks=[2,5,10,20,40,80,160,64];var promoteStr="nbrq";
var hexPadding=["","0000000","000000","00000","0000","000","00","0",""];var entrySize=16;function to32BitHex(int){var hex=int.toString(16);
return hexPadding[hex.length]+hex}function to64BitHex(ints){return to32BitHex(ints[0])+to32BitHex(ints[1])}function hex64ToDec(hex){
return[parseInt(hex.substr(0,8),16),parseInt(hex.substr(8),16)]}function hash(fen,enc){var key1,key2;var parts=fen.split(" ");var pieces=parts[0].split("/");
var rank;var file;var squares;var i;var len;var piece;var randVal;var castling;var whitesMove=parts[1]==="w";var pawnPos=0;var curPieceValue;
var epFile;var epPawnType=Number(whitesMove);var epPawnRank=epPawnType?3:4;for(rank=7;rank>=0;rank-=1){file=0;squares=pieces[rank];
len=squares.length;for(i=0;i<len;i+=1){piece=squares[i];curPieceValue=zobristPieceValue[piece];if(curPieceValue>=0){randVal=zobristPiece[64*curPieceValue+8*(7-rank)+file];
key1=(key1^randVal[0])>>>0;key2=(key2^randVal[1])>>>0;if(curPieceValue===epPawnType&&rank===epPawnRank){pawnPos|=1<<file}}file+=Number(piece)||1;
}}if(parts[2]!=="-"){castling=parts[2];if(castling.indexOf("K")>-1){randVal=zobristCastle[0];key1=(key1^randVal[0])>>>0;key2=(key2^randVal[1])>>>0;
}if(castling.indexOf("Q")>-1){randVal=zobristCastle[2];key1=(key1^randVal[0])>>>0;key2=(key2^randVal[1])>>>0}if(castling.indexOf("k")>-1){
randVal=zobristCastle[1];key1=(key1^randVal[0])>>>0;key2=(key2^randVal[1])>>>0}if(castling.indexOf("q")>-1){randVal=zobristCastle[3];
key1=(key1^randVal[0])>>>0;key2=(key2^randVal[1])>>>0}}if(parts[3]&&parts[3]!=="-"){epFile=parts[3].charCodeAt(0)-97;if(enPassantMasks[epFile]&pawnPos){
randVal=zobristEnPassant[epFile];key1=(key1^randVal[0])>>>0;key2=(key2^randVal[1])>>>0}}if(whitesMove){key1=(key1^zobristTurn[0])>>>0;
key2=(key2^zobristTurn[1])>>>0}if(enc&&enc==="hex"){return to64BitHex([key1,key2])}return[key1,key2]}function ajaxLoad(path,cb){var ajax=new XMLHttpRequest;
var isJSON=path.toLowerCase().indexOf(".json")>-1;function onload(){var dv;if(ajax.status>=200&&ajax.status<300||ajax.status===304||ajax.status===0||ajax.status===1223){
if(isJSON){try{cb(null,JSON.parse(ajax.response))}catch(err){cb(err)}}else{dv=new DataView(ajax.response);cb(null,dv)}}else{cb(new Error("Error code: "+ajax.status));
}}ajax.open("GET",path,true);if(!isJSON){ajax.responseType="arraybuffer"}ajax.onload=onload;ajax.onerror=onload;ajax.send()}function wrap(mixed){
var bookFind;var wrapper={};var buf;var json;var testKey;function parseBook(offset,castling){var move=buf.getUint16(offset+8);var weight=buf.getUint16(offset+10);
var moveStr;var rank1,file1,rank2,file2,promote;rank1=move>>9&7;file1=move>>6&7;rank2=move>>3&7;file2=move&7;promote=move>>12&7;if(file1===4&&castling&&rank1===rank2&&castling!=="-"){
if(file2===7&&(rank1===0&&castling.indexOf("K")>-1||rank1===7&&castling.indexOf("k")>-1)){file2-=1}else if(file2===0&&(rank1===0&&castling.indexOf("Q")>-1||rank1===7&&castling.indexOf("q")>-1)){
file2+=2}}moveStr=String.fromCharCode(file1+97)+(rank1+1)+String.fromCharCode(file2+97)+(rank2+1);if(promote){moveStr+=promoteStr[promote-1];
}return{move:moveStr,weight:weight}}function sortMoves(moves){moves.sort(function sorter(a,b){return b.weight-a.weight})}function query(options){
if(typeof options==="string"){options={fen:options}}return bookFind(options)}function pick(options){var moves;var pickNum;var len;
var randNum;var i;var partialSum=0;options=options||{};moves=options.moves||query(options);sortMoves(moves);len=moves.length;if(len){
if(!options.type||len===1||options.type==="best"){return moves[0].move}else if(options.type==="random"){randNum=Math.floor(Math.random()*moves.sum)+1;
for(i=0;i<len-1;i+=1){partialSum+=moves[i].weight;if(randNum<=partialSum){break}}return moves[i].move}else if(options.type==="randomDisregardWeight"){
return moves[Math.floor(Math.random()*len)].move}else if(options.type==="worst"){return moves[len-1].move}else{pickNum=parseInt(options.type)||1;
if(pickNum<0){pickNum=len+pickNum+1}if(pickNum<1){pickNum=1}else if(pickNum>len){pickNum=len}return moves[pickNum-1].move}}}function bufferBookFind(options){
var len=buf.length||buf.byteLength||0;var offset=options.offset||0;var zob;var fen=options.fen;var chess960=options.chess960;var checkAll=options.checkAll;
var found;var moves=[];var sum=0;var tmpMove;var i;var castling;if(options.hash){zob=options.hash;if(typeof zob==="string"){zob=hex64ToDec(zob);
}}else{zob=hash(fen)}if(!chess960&&fen){castling=fen.split(" ")[2]}for(offset=0;offset<len;offset+=entrySize){if(buf.getUint32(offset)===zob[0]&&buf.getUint32(offset+4)===zob[1]){
tmpMove=parseBook(offset,castling);moves[moves.length]=tmpMove;sum+=tmpMove.weight;found=true}else if(found&&!checkAll){break}}moves.sum=sum;
if(options.relative){for(i=moves.length-1;i>=0;i-=1){moves[i].relative=Math.round(moves[i].weight/sum*1e4)}}return moves}function decompressMoves(moves){
var newMoves=[];var i;var len=moves.b.length;for(i=0;i<len;++i){newMoves.push({move:moves.b[i],weight:moves.w[i]})}return newMoves;
}function jsonBookFind(options){var moves;var i;var sum=0;var smallFen;var smallFen2;var match;var fen=options.fen;var castling;if(wrapper.useFen){
smallFen=fen.replace(/ \d+ \d+$/,"");moves=json[smallFen];if(!moves){smallFen2=smallFen.replace(/[a-h][1-8]$/,"-");if(smallFen2!==smallFen){
moves=json[smallFen2]}}}else{if(!options.hash){options.hash=hash(fen,"hex")}moves=json[options.hash];if(moves){if(moves[0]&&moves[0].n){
moves=moves[0]}if(moves.n&&!moves.b){return[]}else if(moves.b){moves=decompressMoves(moves)}else if(!options.chess960&&fen){castling=fen.split(" ")[2];
for(i=moves.length-1;i>=0;i-=1){match=moves[i].move.match(/e([18])([ah])\1/);if(match){if(match[2]==="h"&&(match[1]==="1"&&castling.indexOf("K")>-1||match[1]==="8"&&castling.indexOf("k")>-1)){
moves[i]={move:"e"+match[1]+"g"+match[1],weight:moves[i].weight}}else if(match[2]==="a"&&(match[1]==="1"&&castling.indexOf("Q")>-1||match[1]==="8"&&castling.indexOf("q")>-1)){
moves[i]={move:"e"+match[1]+"c"+match[1],weight:moves[i].weight}}}}}}}if(moves){for(i=moves.length-1;i>=0;i-=1){sum+=Number(moves[i].weight);
}}else{moves=[]}moves.sum=sum;return moves}wrapper={query:query,pick:pick};if(mixed.getUint32){bookFind=bufferBookFind;buf=mixed;wrapper.buffer=buf;
}else{bookFind=jsonBookFind;json=mixed;wrapper.json=json;for(testKey in json){wrapper.useFen=testKey.indexOf(" ")>-1;break}}return wrapper;
}function getBook(path,cb){function onload(err,mixed){var wrapper;if(mixed){wrapper=wrap(mixed)}if(cb){return cb(err,wrapper)}if(err){
throw err}return wrapper}ajaxLoad(path,onload)}var loadBook=function(){var bookCache={};return function loadBook(path,cb){if(bookCache[path]){
if(bookCache[path].book){setTimeout(function(){cb(null,bookCache[path].book)},0)}else{bookCache[path].cbs.push(cb)}return}bookCache[path]={
cbs:[cb]};getBook(path,function onload(err,book){var cbs=bookCache[path].cbs;if(err){delete bookCache[path]}else{bookCache[path].book=book;
bookCache[path].cbs=undefined}cbs.forEach(function(cb){setTimeout(function(){cb(err,book)},0)})})}}();return{hash:hash,loadBook:loadBook,
to64BitHex:to64BitHex,zobristPiece:zobristPiece,zobristCastle:zobristCastle,zobristEnPassant:zobristEnPassant,zobristTurn:zobristTurn,
zobristPieceValue:zobristPieceValue,zobristPieceValueNumbers:zobristPieceValueNumbers}}();var Chess=function init(){var VARIANTS={
Chess:0,Chess960:1,Crazyhouse:2,"3-check":3,"King of the Hill":4,Bughouse:5,chess960:1,Fischerandom:1,fischerandom:1,crazyhouse:2,
"three-check":3,kingofthehill:4,koth:4,bughouse:5};var VARIANT_NAMES=["Chess","Chess960","Crazyhouse","3-check","King of the Hill","Bughouse"];
var SQUARES={a8:0,b8:1,c8:2,d8:3,e8:4,f8:5,g8:6,h8:7,a7:16,b7:17,c7:18,d7:19,e7:20,f7:21,g7:22,h7:23,a6:32,b6:33,c6:34,d6:35,e6:36,
f6:37,g6:38,h6:39,a5:48,b5:49,c5:50,d5:51,e5:52,f5:53,g5:54,h5:55,a4:64,b4:65,c4:66,d4:67,e4:68,f4:69,g4:70,h4:71,a3:80,b3:81,c3:82,
d3:83,e3:84,f3:85,g3:86,h3:87,a2:96,b2:97,c2:98,d2:99,e2:100,f2:101,g2:102,h2:103,a1:112,b1:113,c1:114,d1:115,e1:116,f1:117,g1:118,
h1:119};var LMIourPieces;var LMIcheckers;var LMIpinCount;var LMIcastling;var LMIq=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
var LMoves=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var LMovesStart=0;
var LMovesIndex=0;var LMovesPieces=0;var EMPTY=-1;var WHITE=1;var BLACK=2;var PAWN=4;var KNIGHT=8;var BISHOP=16;var ROOK=32;var QUEEN=64;
var KING=128;var COLOR_MASK=3;var TYPE_MASK=252;var PIECE_MASK=255;var COULD_PIN=256;var WAS_PROMOTED=512;var SLIDING=112;var ATTACKED=1;
var MUST_OCCUPY=2;var PINNED=4;var PINNED_SHIFT=3;var FROM_SHIFT=7;var TO_SHIFT=14;var ADDITIONAL_SHIFT=21;var SQUARE_MASK=127;var SYMBOLS="pnbrqkPNBRQK";
var DEFAULT_POSITION="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";var PIECE_OFFSETS=[];PIECE_OFFSETS[5]=[-16,-17,-15];
PIECE_OFFSETS[6]=[16,17,15];PIECE_OFFSETS[8]=[-18,-33,-31,-14,18,33,31,14];PIECE_OFFSETS[16]=[-17,-15,17,15];PIECE_OFFSETS[32]=[-16,1,16,-1];
PIECE_OFFSETS[64]=[-17,-16,-15,1,17,16,15,-1];PIECE_OFFSETS[128]=[-17,-16,-15,1,17,16,15,-1];var PIECES={P:5,p:6,N:9,n:10,B:17,b:18,
R:33,r:34,Q:65,q:66,K:129,k:130};var PIECES_BASE={P:4,p:4,N:8,n:8,B:16,b:16,R:32,r:32,Q:64,q:64,K:128,k:128};var PIECES_REVERSED={
5:"P",6:"p",9:"N",10:"n",17:"B",18:"b",33:"R",34:"r",65:"Q",66:"q",129:"K",130:"k"};var TYPES_SAN_REVERSED={9:"N",10:"N",17:"B",18:"B",
33:"R",34:"R",65:"Q",66:"Q",129:"K",130:"K"};var ATTACKS=[80,0,0,0,0,0,0,96,0,0,0,0,0,0,80,0,0,80,0,0,0,0,0,96,0,0,0,0,0,80,0,0,0,0,80,0,0,0,0,96,0,0,0,0,80,0,0,0,0,0,0,80,0,0,0,96,0,0,0,80,0,0,0,0,0,0,0,0,80,0,0,96,0,0,80,0,0,0,0,0,0,0,0,0,0,80,8,96,8,80,0,0,0,0,0,0,0,0,0,0,0,8,212,224,212,8,0,0,0,0,0,0,96,96,96,96,96,96,224,0,224,96,96,96,96,96,96,0,0,0,0,0,0,8,212,224,212,8,0,0,0,0,0,0,0,0,0,0,0,80,8,96,8,80,0,0,0,0,0,0,0,0,0,0,80,0,0,96,0,0,80,0,0,0,0,0,0,0,0,80,0,0,0,96,0,0,0,80,0,0,0,0,0,0,80,0,0,0,0,96,0,0,0,0,80,0,0,0,0,80,0,0,0,0,0,96,0,0,0,0,0,80,0,0,80,0,0,0,0,0,0,96,0,0,0,0,0,0,80];
var KING_THREATS=[336,80,80,0,0,0,96,352,96,0,0,0,80,80,336,0,80,336,80,80,0,0,96,352,96,0,0,80,80,336,80,0,80,80,336,80,80,0,96,352,96,0,80,80,336,80,80,0,0,80,80,336,80,80,96,352,96,80,80,336,80,80,0,0,0,0,80,80,336,88,120,360,120,88,336,80,80,0,0,0,0,0,0,80,88,476,252,508,252,476,88,80,0,0,0,0,96,96,96,96,120,252,252,252,252,252,120,96,96,96,96,0,352,352,352,352,360,508,252,0,252,508,360,352,352,352,352,0,96,96,96,96,120,252,252,252,252,252,120,96,96,96,96,0,0,0,0,80,88,476,252,508,252,476,88,80,0,0,0,0,0,0,80,80,336,88,120,360,120,88,336,80,80,0,0,0,0,80,80,336,80,80,96,352,96,80,80,336,80,80,0,0,80,80,336,80,80,0,96,352,96,0,80,80,336,80,80,0,80,336,80,80,0,0,96,352,96,0,0,80,80,336,80,0,336,80,80,0,0,0,96,352,96,0,0,0,80,80,336];
var KING_THREATS_K=[336,80,80,0,0,0,96,352,96,96,0,0,80,80,336,0,80,336,80,80,0,0,96,352,96,96,0,80,80,336,80,0,80,80,336,80,80,0,96,352,96,96,80,80,336,80,80,0,0,80,80,336,80,80,96,352,96,112,80,336,80,80,0,0,0,0,80,80,336,88,120,360,120,120,336,80,80,0,0,0,0,0,0,80,88,476,252,508,252,508,88,80,0,0,0,0,96,96,96,96,120,252,252,252,252,252,252,104,96,96,96,0,352,352,352,352,360,508,252,0,252,508,488,352,352,352,352,0,96,96,96,96,120,252,252,252,252,252,252,104,96,96,96,0,0,0,0,80,88,476,252,508,252,508,88,80,0,0,0,0,0,0,80,80,336,88,120,360,120,120,336,80,80,0,0,0,0,80,80,336,80,80,96,352,96,112,80,336,80,80,0,0,80,80,336,80,80,0,96,352,96,96,80,80,336,80,80,0,80,336,80,80,0,0,96,352,96,96,0,80,80,336,80,0,336,80,80,0,0,0,96,352,96,96,0,0,80,80,336];
var KING_THREATS_Q=[336,80,80,0,0,96,96,352,96,0,0,0,80,80,336,0,80,336,80,80,0,96,96,352,96,0,0,80,80,336,80,0,80,80,336,80,80,96,96,352,96,0,80,80,336,80,80,0,0,80,80,336,80,112,96,352,96,80,80,336,80,80,0,0,0,0,80,80,336,120,120,360,120,88,336,80,80,0,0,0,0,0,0,80,88,508,252,508,252,476,88,80,0,0,0,0,96,96,96,104,252,252,252,252,252,252,120,96,96,96,96,0,352,352,352,352,488,508,252,0,252,508,360,352,352,352,352,0,96,96,96,104,252,252,252,252,252,252,120,96,96,96,96,0,0,0,0,80,88,508,252,508,252,476,88,80,0,0,0,0,0,0,80,80,336,120,120,360,120,88,336,80,80,0,0,0,0,80,80,336,80,112,96,352,96,80,80,336,80,80,0,0,80,80,336,80,80,96,96,352,96,0,80,80,336,80,80,0,80,336,80,80,0,96,96,352,96,0,0,80,80,336,80,0,336,80,80,0,0,96,96,352,96,0,0,0,80,80,336];
var KING_THREATS_KQ=[336,80,80,0,0,96,96,352,96,96,0,0,80,80,336,0,80,336,80,80,0,96,96,352,96,96,0,80,80,336,80,0,80,80,336,80,80,96,96,352,96,96,80,80,336,80,80,0,0,80,80,336,80,112,96,352,96,112,80,336,80,80,0,0,0,0,80,80,336,120,120,360,120,120,336,80,80,0,0,0,0,0,0,80,88,508,252,508,252,508,88,80,0,0,0,0,96,96,96,104,252,252,252,252,252,252,252,104,96,96,96,0,352,352,352,352,488,508,252,0,252,508,488,352,352,352,352,0,96,96,96,104,252,252,252,252,252,252,252,104,96,96,96,0,0,0,0,80,88,508,252,508,252,508,88,80,0,0,0,0,0,0,80,80,336,120,120,360,120,120,336,80,80,0,0,0,0,80,80,336,80,112,96,352,96,112,80,336,80,80,0,0,80,80,336,80,80,96,96,352,96,96,80,80,336,80,80,0,80,336,80,80,0,96,96,352,96,96,0,80,80,336,80,0,336,80,80,0,0,96,96,352,96,96,0,0,80,80,336];
var KING_THREATS_960=[336,80,80,112,112,112,96,352,96,96,112,112,112,80,336,0,80,336,80,112,112,112,112,352,96,112,112,112,112,336,80,0,80,80,336,112,112,112,112,368,112,112,112,112,368,80,80,0,80,80,80,368,112,112,112,368,112,112,112,368,112,80,80,0,80,80,80,112,368,120,120,376,120,120,368,112,112,80,80,0,0,80,88,120,120,508,252,508,252,508,120,120,120,88,80,0,96,104,252,252,252,252,252,252,252,252,252,252,252,252,104,0,352,352,480,480,488,508,252,0,252,508,488,480,480,480,352,0,96,104,252,252,252,252,252,252,252,252,252,252,252,252,104,0,0,80,88,120,120,508,252,508,252,508,120,120,120,88,80,0,80,80,80,112,368,120,120,376,120,120,368,112,112,80,80,0,80,80,80,368,112,112,112,368,112,112,112,368,112,80,80,0,80,80,336,112,112,112,112,368,112,112,112,112,368,80,80,0,80,336,80,112,112,112,112,352,96,112,112,112,112,336,80,0,336,80,80,112,112,112,96,352,96,96,112,112,112,80,336];
var RAYS=[17,0,0,0,0,0,0,16,0,0,0,0,0,0,15,0,0,17,0,0,0,0,0,16,0,0,0,0,0,15,0,0,0,0,17,0,0,0,0,16,0,0,0,0,15,0,0,0,0,0,0,17,0,0,0,16,0,0,0,15,0,0,0,0,0,0,0,0,17,0,0,16,0,0,15,0,0,0,0,0,0,0,0,0,0,17,33,16,31,15,0,0,0,0,0,0,0,0,0,0,0,18,17,16,15,14,0,0,0,0,0,0,1,1,1,1,1,1,1,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,-14,-15,-16,-17,-18,0,0,0,0,0,0,0,0,0,0,0,-15,-31,-16,-33,-17,0,0,0,0,0,0,0,0,0,0,-15,0,0,-16,0,0,-17,0,0,0,0,0,0,0,0,-15,0,0,0,-16,0,0,0,-17,0,0,0,0,0,0,-15,0,0,0,0,-16,0,0,0,0,-17,0,0,0,0,-15,0,0,0,0,0,-16,0,0,0,0,0,-17,0,0,-15,0,0,0,0,0,0,-16,0,0,0,0,0,0,-17];
var HAND_SHIFTS=[0,5,8,11,14];var HAND_MASKS=[31,7,7,7,63];var HAND_SHIFT_SAN={P:0,p:0,N:5,n:5,B:8,b:8,R:11,r:11,Q:14,q:14};var HAND_PIECES=[PAWN,KNIGHT,BISHOP,ROOK,QUEEN];
var HAND_PIECES_SAN=["","N","B","R","Q"];var BITS={CAPTURE:1,BIG_PAWN:2,EP_CAPTURE:4,ANY_CAPTURE:5,PROMOTION:8,KSIDE_CASTLE:16,QSIDE_CASTLE:32,
KQSIDE_CASTLE:48,DROP:64,DROP_OR_PROMOTE:72};var SECOND_RANK=[0,6,1];var CASTLING_SQUARES={K:119,Q:112,k:7,q:0,A:112,B:113,C:114,
D:115,E:116,F:117,G:118,H:119,a:0,b:1,c:2,d:3,e:4,f:5,g:6,h:7};var MANDATORY_HEADERS=["Event","Site","Date","Round","White","Black","Result"];
var IGNORE_HEADERS=["Event","Site","Date","Round","White","Black","Result","Variant","SetUp","FEN","WhiteA","WhiteB","BlackA","BlackB"];
function rank(i){return i>>4}function file(i){return i&7}function algebraic(i){return String.fromCharCode(file(i)+97)+(8-rank(i));
}function swapColor(color){return 3-color}function hashNum(hash,num){hash[0]=(hash[0]^num[0])>>>0;hash[1]=(hash[1]^num[1])>>>0}function wordWrap(str,width,brk){
if(width<1){return str}width=typeof width==="number"?width:80;return str.replace(new RegExp("(.{1,"+width+"})(?: |$|\r?\n)","g"),"$1"+brk).slice(0,-brk.length);
}function completeFen(fen){var extraPart;var fenParts;fen=fen.trim();fenParts=fen.split(" ");extraPart=[""," w - - 0 1"," - - 0 1"," - 0 1"," 0 1"," 1"][fenParts.length];
if(extraPart&&fen){fen+=extraPart}else if(fenParts[5]==="0"){fenParts[5]=1;fen=fenParts.join(" ")}return fen}function formatTimestamp(timestamp){
var moveTimeM=Math.floor(timestamp%36e3/600);var moveTimeS=Math.floor(timestamp%36e3%600)/10;return Math.floor(timestamp/36e3)+":"+(moveTimeM<10?"0":"")+moveTimeM+":"+(moveTimeS<10?"0":"")+moveTimeS;
}function timestampToTime(clkTime){var parts=clkTime.split(":");return(parts[0]*3600+parts[1]*60+parts[2]*1)*10}function createVariantZobristNumbers(){
BOOK_READER.zobristCheck=[[441249556,340005552],[1040760204,311043682],[1621584863,1749286446],[1006868636,1625552915],[1953853171,24921145],[161251506,1935545265]];
}function fixFenPieces(pList,thisVariant){var len=pList.length;var i;var rank=0;var file=0;var isDropChess=thisVariant&&(thisVariant===VARIANTS.Crazyhouse||thisVariant===VARIANTS.Bughouse);
var el;for(i=0;i<len;++i){el=pList[i];if(+el!==+el){if(el==="/"){if(file!==8){pList=pList.substr(0,i)+(8-file)+pList.substr(i);++i;
++len}file=0;if(++rank>7){if(!isDropChess&&i<len-1||!/^[pnbrq]{0,63}$/i.test(pList.substr(i+1))){return false}break}}else if(PIECES[el]){
if(++file>8){return false}}else if(el==="~"){if(!isDropChess||!i||!/[nbrq]/i.test(pList[i-1])){pList=pList.substr(0,i)+pList.substr(i+1);
--i;--len}}else{return false}}else{file+=el*1;if(file>8){pList=pList.substr(0,i)+(el-(file-8))+pList.substr(i+1);file=8}}}return pList;
}function validateFen(fen,thisVariant){var i;var rows;var letter;var chess960CastlingRegex=/^(?:[A-H]{1,2}[a-h]{0,2}|[A-H]{0,2}[a-h]{1,2}|KQ?k?q?|Qk?q?|kq?|q|-)$/;
var isDropChess=thisVariant*1===VARIANTS.Crazyhouse||VARIANTS[thisVariant]===VARIANTS.Crazyhouse||thisVariant*1===VARIANTS.Bughouse||VARIANTS[thisVariant]===VARIANTS.Bughouse;
var extraProp;var tokens;var res;var epFile=0;var epRankReversed=0;var epSquareRankReversed;var epGood=true;var epPiece="";var rookPositions={
0:0,7:0};var kingPosition={0:0,7:0};var kingPiece={0:"k",7:"K"};var rookPiece={0:"r",7:"R"};var whiteCastlingFlags;var blackCastlingFlags;
var is960=thisVariant*1===VARIANTS.Chess960||VARIANTS[thisVariant]===VARIANTS.Chess960;var cflags;var queenSideRookMasks;var kingSideRookMasks;
var flagFile;var flagColor;var charCode;var lastCharCode;var chess960CastlingSides;var sumFields;var previousWasNumber;var k;if(!fen){
return 1}if(thisVariant*1===VARIANTS.Bughouse||VARIANTS[thisVariant]===VARIANTS.Bughouse){tokens=fen.split(" | ");if(tokens.length===2){
res=validateFen(tokens[0],thisVariant);if(res===0){res=validateFen(tokens[1],thisVariant)}return res}}tokens=fen.split(/\s+/);if((thisVariant*1===VARIANTS["3-check"]||VARIANTS[thisVariant]===VARIANTS["3-check"])&&tokens.length===7){
extraProp=tokens.pop();if(!/^\+[0-3]\+[0-3]$/.test(extraProp)||extraProp==="+3+3"){return 14}}if(tokens.length!==6){return 1}if(/\D|.{7,}|^0|^$/.test(tokens[5])){
return 2}if(/\D|.{7,}|^0.|^$/.test(tokens[4])){return 3}if(!/^(?:-|[abcdefgh][36])$/.test(tokens[3])){return 4}cflags=tokens[2];if(is960){
if(!chess960CastlingRegex.test(cflags)){return 12}}else{if(!/^(?:KQ?k?q?|Qk?q?|kq?|q|-)$/.test(cflags)){if(typeof thisVariant!=="undefined"||!chess960CastlingRegex.test(cflags)){
return 5}else{is960=true}}}if(tokens[1]!=="w"&&tokens[1]!=="b"){return 6}if(isDropChess){tokens[0]=tokens[0].replace(/~(?=.*\/)/g,"");
}rows=tokens[0].split("/");if(isDropChess&&rows.length===9){extraProp=rows.pop();if(!/^[pnbrq]{0,63}$/i.test(extraProp)){return 13;
}}if(rows.length!==8){return 7}if(tokens[3][1]==="3"&&tokens[1]==="w"||tokens[3][1]==="6"&&tokens[1]==="b"){return 11}else if(tokens[3]!=="-"){
epRankReversed=tokens[3][1]==="3"?4:3;epSquareRankReversed=epRankReversed===4?5:2;epFile=tokens[3].charCodeAt(0)-97;epGood=false;epPiece=epRankReversed===4?"P":"p";
}for(i=0;i<rows.length;++i){sumFields=0;previousWasNumber=false;for(k=0;k<rows[i].length;k++){letter=rows[i][k];if(+letter===+letter){
if(previousWasNumber){return 8}sumFields+=letter*1;previousWasNumber=true}else{if(SYMBOLS.indexOf(letter)===-1){return 9}if(!epGood&&epRankReversed===i&&epFile===sumFields&&epPiece===letter){
epGood=true}if(epSquareRankReversed===i&&epFile===sumFields){return 11}if(i%7===0){if(letter===kingPiece[i]){kingPosition[i]=1<<sumFields;
}else if(letter===rookPiece[i]){rookPositions[i]|=1<<sumFields}}++sumFields;previousWasNumber=false}}if(sumFields!==8){return 10}
}if(!epGood){return 11}if(cflags!=="-"){if(is960){kingSideRookMasks={0:0,1:0,2:252,4:248,8:240,16:224,32:192,64:128,128:0};queenSideRookMasks={
0:0,1:0,2:1,4:3,8:7,16:15,32:31,64:63,128:0};chess960CastlingSides={0:[0,0],7:[0,0]};for(i=cflags.length-1;i>=0;--i){charCode=cflags.charCodeAt(i);
if(lastCharCode&&lastCharCode>charCode&&lastCharCode-charCode<8){return 15}if(charCode===75){flagColor=7;flagFile=rookPositions[flagColor]&kingSideRookMasks[kingPosition[flagColor]];
}else if(charCode===81){flagColor=7;flagFile=rookPositions[flagColor]&queenSideRookMasks[kingPosition[flagColor]]}else if(charCode===107){
flagColor=0;flagFile=rookPositions[flagColor]&kingSideRookMasks[kingPosition[flagColor]]}else if(charCode===113){flagColor=0;flagFile=rookPositions[flagColor]&queenSideRookMasks[kingPosition[flagColor]];
}else{flagColor=charCode>=97?0:7;flagFile=1<<charCode-(flagColor?65:97);lastCharCode=charCode}if(!flagFile||(flagFile&flagFile-1)!==0){
return 15}if(kingPosition[flagColor]<2||kingPosition[flagColor]>64||(flagFile&rookPositions[flagColor])!==flagFile){return 15}if(++chess960CastlingSides[flagColor][(kingPosition[flagColor]<flagFile)*1]>1){
return 15}}}else{whiteCastlingFlags=(cflags.indexOf("K")>-1?128:0)|(cflags.indexOf("Q")>-1?1:0);if(whiteCastlingFlags&&(kingPosition[7]!==16||(whiteCastlingFlags&rookPositions[7])!==whiteCastlingFlags)){
return 15}blackCastlingFlags=(cflags.indexOf("k")>-1?128:0)|(cflags.indexOf("q")>-1?1:0);if(blackCastlingFlags&&(kingPosition[0]!==16||(blackCastlingFlags&rookPositions[0])!==blackCastlingFlags)){
return 15}}}return 0}function handToString(number,isWhite){var str="";var shifts=0;var numberOfPieces;var i;var offset=isWhite?6:0;
if(number){while(shifts<5){numberOfPieces=number>>HAND_SHIFTS[shifts]&HAND_MASKS[shifts];for(i=0;i<numberOfPieces;++i){str+=SYMBOLS[shifts+offset];
}++shifts}}return str}function hash3Check(hash,checks){if(checks[WHITE]){hashNum(hash,BOOK_READER.zobristCheck[checks[WHITE]-1])}
if(checks[BLACK]){hashNum(hash,BOOK_READER.zobristCheck[checks[BLACK]+2])}}function hashHand(hash,hand){var us;var num;var shifts;
var numberOfPieces;var offset=0;var pieceOffset;var i;var tempHash;for(us=1;us<3;++us){num=hand[us];if(num){shifts=0;while(shifts<5){
pieceOffset=offset+shifts*63;numberOfPieces=num>>HAND_SHIFTS[shifts]&HAND_MASKS[shifts];for(i=0;i<numberOfPieces;++i){tempHash=BOOK_READER.zobristPiece[pieceOffset++];
hashNum(hash,[tempHash[0]*31>>>0,tempHash[1]*17>>>0])}++shifts}}offset=315}}function hashEP(board,hash,EPSquare,capturingPawn){if(board[EPSquare+1]===capturingPawn||board[EPSquare-1]===capturingPawn){
hashNum(hash,BOOK_READER.zobristEnPassant[file(EPSquare)])}}function getPieces(board,findPiece){var ourPieces=[];var i;var piece;for(i=0;i<120;++i){
if(i&136){i+=8}piece=board[i];if(piece&&(piece&findPiece)===findPiece){ourPieces.push(i);continue}}return ourPieces}function addPawnMove(from,to,flags){
var baseNumber;if(LMIcheckers===0||LMIq[to]&MUST_OCCUPY){if(rank(to)%7===0){baseNumber=flags|BITS.PROMOTION|from<<FROM_SHIFT|to<<TO_SHIFT;
LMoves[LMovesIndex++]=baseNumber|4<<ADDITIONAL_SHIFT;LMoves[LMovesIndex++]=baseNumber|3<<ADDITIONAL_SHIFT;LMoves[LMovesIndex++]=baseNumber|2<<ADDITIONAL_SHIFT;
LMoves[LMovesIndex++]=baseNumber|1<<ADDITIONAL_SHIFT}else{LMoves[LMovesIndex++]=flags|from<<FROM_SHIFT|to<<TO_SHIFT}}}function kingOfTheHillWin(square){
switch(square){case 67:case 68:case 51:case 52:return true}return false}function canCastle960(board,kingSquare,rookFile,us){var rookSquare=kingSquare+(rookFile-kingSquare%8);
var dir=rookFile>kingSquare%8?1:-1;var finalKingSquare;var finalRookSquare;var i;for(i=kingSquare+dir;i!==rookSquare;i+=dir){if(board[i]){
return false}}if(us===WHITE){finalKingSquare=dir===1?118:114}else{finalKingSquare=dir===1?6:2}finalRookSquare=finalKingSquare-dir;
if(LMIq[finalKingSquare]||board[finalKingSquare]&&finalKingSquare!==kingSquare&&finalKingSquare!==rookSquare||board[finalRookSquare]&&finalRookSquare!==kingSquare&&finalRookSquare!==rookSquare){
return false}if(finalKingSquare!==kingSquare){dir=finalKingSquare>kingSquare?1:-1;for(i=kingSquare+dir;i!==finalKingSquare;i+=dir){
if(i!==rookSquare&&board[i]||LMIq[i]){return false}}}return true}var generatePgn=function(){function createLine(pgnMoveNumber,lines,currentLine,variant,spaceAfterPeriods,hideCommands){
var moves=[];var moveString="";var commands;var atBoundary=true;var move;var i;var j;var command;var altLine;var isWhite;var line=lines[currentLine];
var lineLen=line.length;var linesLen;var childLine;var comment="";if(line.commands&&!hideCommands){for(command in line.commands){
comment+="[%"+command+" "+line.commands[command]+"]"}}if(line.initComment){comment=(comment+" "+line.initComment.replace(/(\"|\}|\%|\\)/g,"\\$1")).trim();
}if(comment){moves.push("{"+comment+"}")}for(i=0;i<lineLen;++i){move=line[i];isWhite=move.color===WHITE;moveString="";comment="";commands=move.commands;
if(variant!==VARIANTS.Bughouse){if(atBoundary&&!isWhite){moveString=pgnMoveNumber+"..."}else if(isWhite){moveString=pgnMoveNumber+".";
}if(spaceAfterPeriods&&(isWhite||atBoundary)){moveString+=" "}}else{if(!moves.bughouseOrder){moves.bughouseOrder=[]}moves.bughouseOrder.push(move.bughouseOrder);
if(!i){moves.blackCountOffset=line[0].color===BLACK?1:0}}moveString+=move.san;if(move.annotation){moveString+=move.annotation}if(move.additionalAnnotation){
moveString+=" "+move.additionalAnnotation.join(" ")}atBoundary=false;if(typeof move.time!=="undefined"&&!commands){commands={clk:formatTimestamp(move.time)
}}if(commands&&!hideCommands){for(command in commands){comment+="[%"+command+" "+commands[command]+"]"}}if(move.comment){comment=(comment+" "+move.comment.replace(/(\"|\}|\%|\\)/g,"\\$1")).trim();
}if(comment){moveString+=" {"+comment+"}";atBoundary=true}moves.push(moveString);if(move.lines){linesLen=move.lines.length;for(j=0;j<linesLen;++j){
childLine=move.lines[j];if(lines[childLine].length){altLine=createLine(pgnMoveNumber,lines,childLine,variant,spaceAfterPeriods,hideCommands);
altLine[0]="("+altLine[0];altLine[altLine.length-1]+=")";moves=moves.concat(altLine);atBoundary=true}}}if(!isWhite){pgnMoveNumber++;
}}return moves}function makeBugHousePgn(chess,moves,spaceAfterPeriods){var aMoves=moves;var bMoves=chess.siblingGame.pgn();var aCount=0;
var bCount=0;var bughouseMoveOrder=[];moves.bughouseOrder=moves.bughouseOrder||[];bMoves.bughouseOrder=bMoves.bughouseOrder||[];while(moves.bughouseOrder.length||bMoves.bughouseOrder.length){
if(!moves.bughouseOrder.length||bMoves.bughouseOrder.length&&moves.bughouseOrder[0]>bMoves.bughouseOrder[0]){bMoves.bughouseOrder.shift();
bughouseMoveOrder.push("B")}else{moves.bughouseOrder.shift();bughouseMoveOrder.push("A")}}moves=[];bughouseMoveOrder.forEach(function(which){
var whichMoves;var whichCount;var moveString="";var countStart;if(which==="A"){whichMoves=aMoves;++aCount;whichCount=aCount;countStart=chess.startingMoveNumber();
}else{whichMoves=bMoves;++bCount;whichCount=bCount;countStart=chess.siblingGame.startingMoveNumber()}moveString=String(Math.floor((whichCount+1)/2)+countStart-1);
if((whichMoves.blackCountOffset+whichCount)%2){moveString+=which}else{moveString+=which.toLowerCase()}moveString+="."+(spaceAfterPeriods?" ":"")+whichMoves.shift();
moves.push(moveString)});return moves}function createHeader(name,value){return"["+name+' "'+String(value).replace(/(\"|\\)/g,"\\$1")+'"]';
}return function generatePgn(options,headers,lines,startingMoveNumber,variant,chess){var newline=typeof options.newline==="string"?options.newline:"\n";
var spaceAfterPeriods=typeof options.spaceAfterPeriods==="undefined"?true:options.spaceAfterPeriods;var pgnData="";var header;var moves;
pgnData+=createHeader("Event",headers.Event)+newline;pgnData+=createHeader("Site",headers.Site)+newline;pgnData+=createHeader("Date",headers.Date)+newline;
pgnData+=createHeader("Round",headers.Round)+newline;if(variant===VARIANTS.Bughouse){pgnData+=createHeader("WhiteA",headers.WhiteA||"?")+newline;
pgnData+=createHeader("BlackA",headers.BlackA||"?")+newline;pgnData+=createHeader("WhiteB",headers.WhiteB||"?")+newline;pgnData+=createHeader("BlackB",headers.BlackB||"?")+newline;
}else{pgnData+=createHeader("White",headers.White)+newline;pgnData+=createHeader("Black",headers.Black)+newline}pgnData+=createHeader("Result",headers.Result)+newline;
if(variant){pgnData+=createHeader("Variant",headers.Variant)+newline}if(headers.FEN&&headers.FEN!==DEFAULT_POSITION){pgnData+=createHeader("SetUp","1")+newline;
pgnData+=createHeader("FEN",headers.FEN)+newline}for(header in headers){if(IGNORE_HEADERS.indexOf(header)===-1){pgnData+=createHeader(header,headers[header])+newline;
}}pgnData+=newline;moves=createLine(startingMoveNumber,lines,0,variant,spaceAfterPeriods,options.hideCommands);if(variant===VARIANTS.Bughouse){
if(chess.isDependent){return moves}moves=makeBugHousePgn(chess,moves,spaceAfterPeriods)}moves.push(headers.Result);return pgnData+wordWrap(moves.join(" "),options.maxWidth,newline);
}}();var tokenizePgn=function(){var annotations="!?‼⁇⁉⁈□∇Δ∞⩲⩱±∓⨀⟳→↑⇆∆⌓⇔⇗⟫⟪✕⊥⊕○⇄↻⊙~";var commandRegex=/\[%(\S+)\s([^\]]+)\]/;var otherAnnotations=/^(?:[+=~\/\-\u2212]+|T?N|RR|D)$/;
function extractCommands(token){var parts;var commands={};var foundCommand;do{parts=commandRegex.exec(token.value);if(parts){foundCommand=true;
token.value=token.value.replace(parts[0],"").trim();commands[parts[1]]=parts[2]}}while(parts);if(foundCommand){token.commands=commands;
}}function isSplitGame(lines,i,len){var firstWord;for(;++i<len;){firstWord=lines[i].match(/^\s*(\S+)/);if(firstWord){return/^(?:\[|1(?:\.|$))/.test(firstWord[1]);
}}}return function tokenize(pgn,options){var lines;var i;var line;var len;var context="tags";var lettersPos;var lettersCount;var letter;
var tokens=[];var curToken={type:context,value:""};var variation=0;var games=[];var lookingForHeader=true;options=options||{};lines=pgn.split(/\r?\n/);
len=lines.length;for(i=0;i<len;++i){line=lines[i].trim();if(line[0]!=="%"){if(!line){if(context==="tags"){context="san";lookingForHeader=false;
}else if(context!=="comment"&&context!=="tagValueStart"&&!variation&&tokens.length&&isSplitGame(lines,i,len)){if(tokens[tokens.length-1].type!=="tagValue"){
games.push(tokens);tokens=[]}context="tags";lookingForHeader=true}}else{line=" "+line+" ";lettersCount=line.length;lettersPos=0;if(lookingForHeader){
for(;lettersPos<lettersCount;++lettersPos){letter=line[lettersPos];if(context==="tags"){if(letter==="["){context="tagName";curToken={
type:context,value:""}}else if(letter.trim()){context="san";curToken={type:context,value:""};lookingForHeader=false;break}}else if(context==="tagName"){
if(curToken.value&&letter.trim()===""){tokens.push(curToken);context="tagValueStart"}else if(letter!==" "){curToken.value+=letter;
}}else if(context==="tagValueStart"){if(letter==='"'||letter==="“"){context="tagValue";curToken={type:context,value:""}}else if(letter.trim()){
return false}}else if(context==="tagValue"){if(letter==='"'||letter==="”"){tokens.push(curToken);if(line[lettersPos+1]==="]"){context="tags";
curToken={type:context,value:""};++lettersPos}else{context="tagEnd"}}else{if(letter==="\\"&&lettersPos+2<lettersCount){++lettersPos;
letter=line[lettersPos]}if(lettersPos>0){curToken.value+=letter}}}else{if(letter==="]"){context="tags";curToken={type:context,value:""
}}else if(letter.trim()){return false}}}}for(;lettersPos<lettersCount;++lettersPos){letter=line[lettersPos];if(context==="san"){if(annotations.indexOf(letter)>-1){
if(letter==="!"||letter==="?"||annotations.indexOf(letter)<6&&(letter=["!!","??","!?","?!"][annotations.indexOf(letter)-2])){if(curToken.value){
tokens.push(curToken)}curToken={type:"a",value:letter};if(line[lettersPos+1]==="!"||line[lettersPos+1]==="?"){curToken.value+=line[++lettersPos];
}tokens.push(curToken);curToken={type:"san",value:""}}else{if(letter==="∞"&&curToken.value==="=/"){curToken.type="aa";curToken.value+=letter;
}else{if(curToken.value){if(otherAnnotations.test(curToken.value)&&(curToken.value!=="--"||options.rejectNullMoves)){curToken.type="aa";
}tokens.push(curToken)}curToken={type:"aa",value:letter};if(letter==="↑"&&line[lettersPos+1]==="↑"){curToken.value="↻";++lettersPos;
}}tokens.push(curToken);curToken={type:"san",value:""}}}else if(letter===" "||letter==="\t"||letter==="\n"||letter==="\r"||letter==="{"||letter==="("||letter===")"){
if(curToken.value){if(curToken.value[0]==="$"){curToken.type="nag"}else if(curToken.value==="*"||curToken.value==="1-0"||curToken.value==="0-1"||curToken.value==="1/2-1/2"||curToken.value==="½-½"){
if(lettersPos+1<lettersCount){return false}curToken.type="result";if(curToken.value==="½-½"){curToken.value="1/2-1/2"}}if(otherAnnotations.test(curToken.value)&&(curToken.value!=="--"||options.rejectNullMoves)){
curToken.type="aa"}tokens.push(curToken);curToken={type:context,value:""}}if(letter===" "||letter==="\t"||letter==="\n"||letter==="\r"){
context="san"}else if(letter==="{"){context="comment"}else if(letter==="("){context="san";tokens.push({type:"variationStart",value:++variation
})}else{tokens.push({type:"variationEnd",value:variation});context="san";if(!variation--){return false}}curToken.type=context}else if(letter!=="."&&(curToken.value||+letter!==+letter||line[lettersPos+1]==="-"||line[lettersPos+1]==="/")){
curToken.value+=letter}else if(+letter===+letter){if(!curToken.number){curToken.number=""}curToken.number+=letter;switch(line[lettersPos+1]){
case"A":case"a":case"B":case"b":curToken.number+=line[++lettersPos];tokens.push({type:"number",value:curToken.number});delete curToken.number;
}}}else{if(lettersPos===0){curToken.value=curToken.value.trim()}if(letter!=="}"){if(letter==="\\"&&lettersPos+2<lettersCount){letter=line[++lettersPos];
}curToken.value+=letter}else{curToken.value=curToken.value.trim();if(curToken.value.indexOf("[")>-1){extractCommands(curToken)}tokens.push(curToken);
context="san";curToken={type:context,value:""}}}}}}}games.push(tokens);return games}}();function Chess(INIT_FEN,INIT_VARIANT){var CHESS;
var BOARD;var VARIANT=0;var HASHING=true;var KINGS=[];var TURN=WHITE;var CASTLING=[];var EP_SQUARE=EMPTY;var HALF_MOVES=0;var MOVE_NUMBER=1;
var STARTING_MOVE_NUMBER=1;var HISTORY=[];var LINES=[HISTORY];var CUR_LINE=0;HISTORY.id=CUR_LINE;var HEADER={};var CHECKS=[];var IS_DROP=false;
var IS_960=false;var makeMove=makeMoveChess;function hashPosition(){var hash=TURN===WHITE?[4174784170,2938602761]:[0,0];var piece;
var us;var i;for(i=0;i<120;++i){if(i&136){i+=8}piece=BOARD[i];if(piece){hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[piece&PIECE_MASK]+8*(7-rank(i))+file(i)]);
}}if(IS_960){for(us=1;us<3;++us){if(CASTLING[us]){if((CASTLING[us]&CASTLING[us]-1)!==0){hashNum(hash,BOOK_READER.zobristCastle[us-1]);
hashNum(hash,BOOK_READER.zobristCastle[us+1])}else if(CASTLING[us]>1<<file(KINGS[us])){hashNum(hash,BOOK_READER.zobristCastle[us-1]);
}else{hashNum(hash,BOOK_READER.zobristCastle[us+1])}}}}else{for(us=1;us<3;++us){if(CASTLING[us]){if(CASTLING[us]&BITS.KSIDE_CASTLE){
hashNum(hash,BOOK_READER.zobristCastle[us-1])}if(CASTLING[us]&BITS.QSIDE_CASTLE){hashNum(hash,BOOK_READER.zobristCastle[us+1])}}}
if(IS_DROP){hashHand(hash,CHESS._hand)}else if(VARIANT===VARIANTS["3-check"]){hash3Check(hash,CHECKS)}}if(EP_SQUARE!==EMPTY){hashEP(BOARD,hash,EP_SQUARE+(TURN===WHITE?16:-16),PAWN|TURN);
}return hash}function getCurrentHash(){var hash;if(HISTORY.length){hash=HISTORY[HISTORY.length-1].hash}else{if(!HISTORY.hash){HISTORY.hash=hashPosition();
}hash=HISTORY.hash}return[hash[0],hash[1]]}function setVariant(thisVariant,noUpdate){var curVariant=VARIANT;if(thisVariant){VARIANT=VARIANTS[thisVariant]||thisVariant*1||VARIANTS[String(thisVariant).replace(/ /g,"").toLowerCase()]||VARIANTS.Chess;
}else{VARIANT=0}if(curVariant!==VARIANT){if(VARIANT===VARIANTS.Bughouse){IS_DROP=true;if(!CHESS.isDependent){CHESS.siblingGame=Chess();
CHESS.siblingGame.hashing(HASHING);CHESS.siblingGame.isDependent=true;CHESS.siblingGame.siblingGame=CHESS;CHESS.siblingGame.header({
Variant:"Bughouse"})}createVariantZobristNumbers();makeMove=makeMoveVariant}else{delete CHESS.siblingGame;IS_DROP=VARIANT===VARIANTS.Crazyhouse;
IS_960=VARIANT===VARIANTS.Chess960;if(VARIANT){createVariantZobristNumbers();makeMove=makeMoveVariant}else{makeMove=makeMoveChess;
}}if(!noUpdate){updateSetup(generateFen())}}}function disambiguate960Rook(sq,dir){var color=sq>7?WHITE:BLACK;var piece;var file;while(!(sq&136)){
piece=BOARD[sq];if(piece&color){if(piece&ROOK){if(file){return}file=sq%8+(color===WHITE?65:97)}else if(piece&KING){return file}}sq+=dir;
}}function clear(thisVariant,noReset,noUpdate){BOARD=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
TURN=WHITE;KINGS[WHITE]=EMPTY;KINGS[BLACK]=EMPTY;CASTLING[WHITE]=0;CASTLING[BLACK]=0;CHESS._hand[WHITE]=0;CHESS._hand[BLACK]=0;CHECKS[WHITE]=0;
CHECKS[BLACK]=0;EP_SQUARE=EMPTY;HALF_MOVES=0;MOVE_NUMBER=1;if(!noReset){HISTORY=[];LINES=[HISTORY];CUR_LINE=0;HISTORY.id=CUR_LINE;
HEADER={Event:"?",Site:"?",Date:"????.??.??",Round:"?",White:"?",Black:"?",Result:"*"};if(thisVariant){setHeader(["Variant",thisVariant]);
}else{setVariant(false,noUpdate)}if(!noUpdate){updateSetup(generateFen())}}}function reset(){clear(0,false,true);HISTORY.hash=[1178310168,378666140];
BOARD=[34,10,18,66,130,18,10,34,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,33,9,17,65,129,17,9,33];
STARTING_MOVE_NUMBER=1;KINGS[WHITE]=116;KINGS[BLACK]=4;CASTLING[WHITE]=48;CASTLING[BLACK]=48}function load(fen,thisVariant,noReset,noValidate){
var square=0;var tokens;var pList;var charCode;var len;var i;var extraMatch;var el;var castlingColor;var chess960CastlingSides;var rookSquare;
var cflags;var enPassant;if(noValidate){tokens=fen.split(" ");enPassant=tokens[3];cflags=tokens[2]}else{tokens=fen.trim().split(/\s+/);
enPassant=tokens[3]||"-";cflags=tokens[2]||"-"}if(typeof thisVariant==="undefined"){if((cflags.charCodeAt(0)&31)<9){setVariant(VARIANTS.Chess960,true);
}}else{setVariant(thisVariant,true)}pList=tokens[0];if(!noValidate&&!(pList=fixFenPieces(pList,VARIANT))){return false}len=pList.length;
clear(VARIANT_NAMES[VARIANT],noReset,true);if(IS_DROP){if(VARIANT===VARIANTS.Bughouse&&!CHESS.isDependent){extraMatch=fen.split(" | ");
if(!CHESS.siblingGame.load(extraMatch.length===1?fen:extraMatch[1],thisVariant,noReset,noValidate)){reset();return false}}for(i=0;i<len;++i){
el=pList[i];if(+el!==+el){if(el==="/"){if(square>111){for(++i;i<len;++i){el=pList[i];CHESS._hand[el<"a"?WHITE:BLACK]+=1<<HAND_SHIFT_SAN[el]>>>0;
}break}else{square+=8}}else{BOARD[square]=PIECES[el];if(pList[i+1]==="~"){++i;BOARD[square]|=WAS_PROMOTED}if(BOARD[square]&KING){
KINGS[BOARD[square]&COLOR_MASK]=square}++square}}else{square+=el*1}}}else{for(i=0;i<len;++i){el=pList[i];if(+el!==+el){if(el==="/"){
square+=8}else{BOARD[square]=PIECES[el];if(BOARD[square]&KING){KINGS[BOARD[square]&COLOR_MASK]=square}++square}}else{square+=el*1;
}}}TURN=tokens[1]==="b"?BLACK:WHITE;if(cflags!=="-"){if(IS_960){chess960CastlingSides={1:[0,0],2:[0,0]};for(i=cflags.length-1;i>=0;--i){
charCode=cflags.charCodeAt(i);if(charCode===75){charCode=disambiguate960Rook(119,-1)}else if(charCode===81){charCode=disambiguate960Rook(112,1);
}else if(charCode===107){charCode=disambiguate960Rook(7,-1)}else if(charCode===113){charCode=disambiguate960Rook(0,1)}castlingColor=charCode<97?WHITE:BLACK;
rookSquare=CASTLING_SQUARES[String.fromCharCode(charCode)];el=BOARD[rookSquare];if(el===(ROOK|castlingColor)){if(charCode>=97){if(KINGS[castlingColor]>=1&&KINGS[castlingColor]<=6){
CASTLING[castlingColor]|=1<<charCode-97}}else if(KINGS[castlingColor]>=113&&KINGS[castlingColor]<=118){CASTLING[castlingColor]|=1<<charCode-65;
}++chess960CastlingSides[castlingColor][(KINGS[castlingColor]<rookSquare)*1]}}if(chess960CastlingSides[WHITE][0]>1||chess960CastlingSides[WHITE][1]>1){
CASTLING[WHITE]=0}if(chess960CastlingSides[BLACK][0]>1||chess960CastlingSides[BLACK][1]>1){CASTLING[BLACK]=0}}else{if(!noValidate){
for(i=cflags.length-1;i>=0;--i){el=BOARD[CASTLING_SQUARES[cflags[i]]];castlingColor=cflags.charCodeAt(i)<97?WHITE:BLACK;if(el!==(ROOK|castlingColor)||KINGS[castlingColor]!==(castlingColor===WHITE?116:4)){
cflags=cflags.substr(0,i)+cflags.substr(i+1)||"-"}}}for(i=cflags.length-1;i>=0;--i){switch(cflags[i]){case"K":CASTLING[WHITE]|=BITS.KSIDE_CASTLE;
break;case"Q":CASTLING[WHITE]|=BITS.QSIDE_CASTLE;break;case"k":CASTLING[BLACK]|=BITS.KSIDE_CASTLE;break;case"q":CASTLING[BLACK]|=BITS.QSIDE_CASTLE;
break}}}}if(!noValidate&&(enPassant.length!==2||TURN===WHITE&&enPassant[1]!=="6"||TURN===BLACK&&enPassant[1]!=="3"||BOARD[enPassant.charCodeAt(0)-97+(8-(enPassant[1]==="3"?4:5))*16]!==(PAWN|swapColor(TURN))||BOARD[SQUARES[enPassant]])){
enPassant="-"}EP_SQUARE=enPassant==="-"?EMPTY:SQUARES[enPassant];HALF_MOVES=tokens[4]*1||0;MOVE_NUMBER=tokens[5]*1||1;if(VARIANT===VARIANTS["3-check"]){
if(tokens[6]&&tokens[6]!=="+3+3"){extraMatch=tokens[6].match(/^\+([0-3])\+([0-3])$/)}extraMatch=extraMatch||[0,0,0];CHECKS[WHITE]=extraMatch[1]*1;
CHECKS[BLACK]=extraMatch[2]*1}if(!noReset){STARTING_MOVE_NUMBER=MOVE_NUMBER;updateSetup(generateFen())}return true}function generateStandardFen(){
var empty=0;var fen="";var i;var cflags="";var piece;for(i=0;i<120;++i){if(i&136){if(empty){fen+=empty}fen+="/";empty=0;i+=8}piece=BOARD[i];
if(piece){if(empty){fen+=empty;empty=0}fen+=PIECES_REVERSED[piece&PIECE_MASK]}else{++empty}}if(empty){fen+=empty}if(CASTLING[WHITE]&BITS.KSIDE_CASTLE){
cflags+="K"}if(CASTLING[WHITE]&BITS.QSIDE_CASTLE){cflags+="Q"}if(CASTLING[BLACK]&BITS.KSIDE_CASTLE){cflags+="k"}if(CASTLING[BLACK]&BITS.QSIDE_CASTLE){
cflags+="q"}fen+=" "+(TURN===WHITE?"w":"b")+" "+(cflags||"-")+" "+(EP_SQUARE===EMPTY?"-":algebraic(EP_SQUARE))+" "+HALF_MOVES+" "+MOVE_NUMBER;
return fen}function generateVariantFen(){var empty=0;var fen="";var i;var chess960Castling;var cflags="";var piece;for(i=0;i<120;++i){
if(i&136){if(empty){fen+=empty}fen+="/";empty=0;i+=8}piece=BOARD[i];if(piece){if(empty){fen+=empty;empty=0}fen+=PIECES_REVERSED[piece&PIECE_MASK];
if(IS_DROP&&piece&WAS_PROMOTED){fen+="~"}}else{++empty}}if(empty){fen+=empty}if(IS_DROP){fen+="/"+handToString(CHESS._hand[WHITE],true)+handToString(CHESS._hand[BLACK]);
}if(IS_960){chess960Castling=CASTLING[BLACK];i=0;while(chess960Castling){if(chess960Castling&1){cflags=String.fromCharCode(i+97)+cflags;
}chess960Castling>>=1;++i}chess960Castling=CASTLING[WHITE];i=0;while(chess960Castling){if(chess960Castling&1){cflags=String.fromCharCode(i+65)+cflags;
}chess960Castling>>=1;++i}}else{if(CASTLING[WHITE]&BITS.KSIDE_CASTLE){cflags+="K"}if(CASTLING[WHITE]&BITS.QSIDE_CASTLE){cflags+="Q";
}if(CASTLING[BLACK]&BITS.KSIDE_CASTLE){cflags+="k"}if(CASTLING[BLACK]&BITS.QSIDE_CASTLE){cflags+="q"}}fen+=" "+(TURN===WHITE?"w":"b")+" "+(cflags||"-")+" "+(EP_SQUARE===EMPTY?"-":algebraic(EP_SQUARE))+" "+HALF_MOVES+" "+MOVE_NUMBER;
if(VARIANT===VARIANTS["3-check"]){fen+=" "+"+"+CHECKS[WHITE]+"+"+CHECKS[BLACK]}else if(VARIANT===VARIANTS.Bughouse&&!CHESS.isDependent){
fen+=" | "+CHESS.siblingGame.fen()}return fen}function generateFen(){return VARIANT?generateVariantFen():generateStandardFen()}function setHeader(args){
var i;var name;var value;for(i=0;i<args.length;i+=2){name=args[i];value=args[i+1];if(name){if(name==="Variant"){setVariant(value);
if(VARIANT){value=VARIANT_NAMES[VARIANT]}else{value=undefined}}if(name==="Result"&&value!=="*"&&value!=="1-0"&&value!=="0-1"&&value!=="1/2-1/2"){
value="*"}if(value!==undefined){HEADER[name]=String(value)}else{if(MANDATORY_HEADERS.indexOf(name)>-1){if(name==="Date"){HEADER[name]="????.??.??";
}else{HEADER[name]="?"}}else{delete HEADER[name]}}}}return HEADER}function updateSetup(fen){if(HISTORY.length>0||CUR_LINE){return;
}if(fen!==DEFAULT_POSITION){HEADER.SetUp="1";HEADER.FEN=fen;HISTORY.hash=null}else{delete HEADER.SetUp;delete HEADER.FEN;HISTORY.hash=[1178310168,378666140];
}}function get(square){var piece=BOARD[SQUARES[square]];return piece?{type:PIECES_REVERSED[piece&TYPE_MASK|BLACK],color:piece&COLOR_MASK,
promoted:(piece&WAS_PROMOTED)!==0}:null}function chooseKingThreats(us,kingSquare){if(IS_960&&CASTLING[us]){return KING_THREATS_960;
}if(CASTLING[us]&BITS.KSIDE_CASTLE&&!BOARD[kingSquare+1]&&!BOARD[kingSquare+2]){if(CASTLING[us]&BITS.QSIDE_CASTLE&&!BOARD[kingSquare-1]&&!BOARD[kingSquare-2]&&!BOARD[kingSquare-3]){
LMIcastling=BITS.KQSIDE_CASTLE;return KING_THREATS_KQ}LMIcastling=BITS.KSIDE_CASTLE;return KING_THREATS_K}else if(CASTLING[us]&BITS.QSIDE_CASTLE&&!BOARD[kingSquare-1]&&!BOARD[kingSquare-2]&&!BOARD[kingSquare-3]){
LMIcastling=BITS.QSIDE_CASTLE;return KING_THREATS_Q}return KING_THREATS}function calculateLegalMoveInfo(findType,kingSquare){var i;
var j;var retrace;var us=TURN;var ourKing=KING|us;var piece;var attackedPiece;var nextAttackedPiece;var nextAttackedSquare;var square;
var len;var offsets;var offset;var isSliding;var kingThreats;var kingThreat;var q=LMIq;LMIourPieces=[];LMIcheckers=0;LMIpinCount=0;
LMIcastling=0;q[0]=q[1]=q[2]=q[3]=q[4]=q[5]=q[6]=q[7]=q[16]=q[17]=q[18]=q[19]=q[20]=q[21]=q[22]=q[23]=q[32]=q[33]=q[34]=q[35]=q[36]=q[37]=q[38]=q[39]=q[48]=q[49]=q[50]=q[51]=q[52]=q[53]=q[54]=q[55]=q[64]=q[65]=q[66]=q[67]=q[68]=q[69]=q[70]=q[71]=q[80]=q[81]=q[82]=q[83]=q[84]=q[85]=q[86]=q[87]=q[96]=q[97]=q[98]=q[99]=q[100]=q[101]=q[102]=q[103]=q[112]=q[113]=q[114]=q[115]=q[116]=q[117]=q[118]=q[119]=0;
if(kingSquare===EMPTY){LMIourPieces=getPieces(BOARD,us|findType);return}kingThreats=chooseKingThreats(us,kingSquare);for(i=0;i<120;++i){
if(i&136){i+=8}piece=BOARD[i];if(!piece){continue}if(piece&us){if(!findType||(piece|0)&findType){LMIourPieces.push(i)}continue}kingThreat=kingThreats[i-kingSquare+119];
if((kingThreat&piece)===0){continue}if(piece&PAWN){offsets=PIECE_OFFSETS[piece];for(j=1;j<3;++j){square=i+offsets[j];if(square&136){
continue}q[square]|=ATTACKED;if(square===kingSquare){++LMIcheckers;q[i]|=MUST_OCCUPY}}}else{offsets=PIECE_OFFSETS[piece&TYPE_MASK];
len=offsets.length;isSliding=piece&SLIDING;for(j=0;j<len;++j){offset=offsets[j];square=i;if(kingSquare>square&&offset<0&&kingSquare-square>16||kingSquare<square&&offset>0&&square-kingSquare>16){
continue}while(true){square+=offset;if(square&136){break}q[square]|=ATTACKED;attackedPiece=BOARD[square];if(attackedPiece){if(attackedPiece&us){
if(square===kingSquare){for(retrace=square-offset;retrace!==i;retrace-=offset){q[retrace]|=MUST_OCCUPY}q[i]|=MUST_OCCUPY;++LMIcheckers;
if(isSliding){square+=offset;if((square&136)===0){q[square]|=ATTACKED}}}else if(isSliding&&kingThreat&COULD_PIN&&LMIcheckers<2){nextAttackedSquare=square+offset;
while((nextAttackedSquare&136)===0){nextAttackedPiece=BOARD[nextAttackedSquare];if(nextAttackedPiece){if(nextAttackedPiece===ourKing){
q[square]|=PINNED+(Math.abs(offset)<<PINNED_SHIFT);++LMIpinCount}break}nextAttackedSquare+=offset}}}break}if(!isSliding){break}}}
}}if(LMIcheckers>1){LMIourPieces=[kingSquare]}}function validateEnPassant(from,to){var ourPawn;var theirPawn;var theirPawnSquare=to+16*(TURN===WHITE?1:-1);
var foundDiscoveredCheck;if(LMIcheckers===1&&(LMIq[to]&MUST_OCCUPY)===0&&(LMIq[theirPawnSquare]&MUST_OCCUPY)===0){return false}ourPawn=BOARD[from];
BOARD[to]=ourPawn;BOARD[from]=0;theirPawn=BOARD[theirPawnSquare];BOARD[theirPawnSquare]=0;foundDiscoveredCheck=inCheck();BOARD[from]=ourPawn;
BOARD[to]=0;BOARD[theirPawnSquare]=theirPawn;return!foundDiscoveredCheck}function addCastlingMoves(us){var castlingFrom;var castlingTo;
var i;if(IS_960){if(CASTLING[us]){castlingFrom=KINGS[us];castlingTo=castlingFrom%8;for(i=0;i<8;++i){if(CASTLING[us]&1<<i&&canCastle960(BOARD,castlingFrom,i,us)){
LMoves[LMovesIndex++]=(i>castlingTo?BITS.KSIDE_CASTLE:BITS.QSIDE_CASTLE)+(castlingFrom<<FROM_SHIFT)+(castlingFrom+(i-castlingTo)<<TO_SHIFT);
++i}}}}else{if(LMIcastling&BITS.KSIDE_CASTLE){castlingFrom=KINGS[us];castlingTo=castlingFrom+2;if(LMIq[castlingFrom+1]===0&&LMIq[castlingFrom+2]===0){
LMoves[LMovesIndex++]=BITS.KSIDE_CASTLE+(castlingFrom<<FROM_SHIFT)+(castlingTo<<TO_SHIFT)}}if(LMIcastling&BITS.QSIDE_CASTLE){castlingFrom=KINGS[us];
castlingTo=castlingFrom-2;if(LMIq[castlingFrom-1]===0&&LMIq[castlingFrom-2]===0){LMoves[LMovesIndex++]=BITS.QSIDE_CASTLE+(castlingFrom<<FROM_SHIFT)+(castlingTo<<TO_SHIFT);
}}}}function drop(noDrop,findType,us){var start;var end;var baseMoveNum;var i;var j;if(!noDrop){if(findType){findType>>=26}for(i=0;i<5;++i){
if((!findType||(findType|0)===1<<i)&&CHESS._hand[us]&HAND_MASKS[i]<<HAND_SHIFTS[i]){if(i===0){start=16;end=103;baseMoveNum=BITS.DROP;
}else{start=0;end=119;baseMoveNum=BITS.DROP|i<<ADDITIONAL_SHIFT}for(j=start;j<=end;++j){if(j&136){j+=8}if(!BOARD[j]){if(LMIcheckers===0||LMIcheckers===1&&LMIq[j]&MUST_OCCUPY){
LMoves[LMovesIndex++]=baseMoveNum|j<<TO_SHIFT}}}if(findType){return}}}}}function generateMoves(findType,noDrop){var from;var j;var len;
var us=TURN;var them=swapColor(us);var piece;var to;var offsets;var offset;var isSliding;var kingSquare=KINGS[us];var pieceCount;var fromShift;
calculateLegalMoveInfo(findType,kingSquare);LMovesPieces=LMIourPieces.length;LMovesIndex=LMovesStart;for(pieceCount=0;pieceCount<LMovesPieces;++pieceCount){
from=LMIourPieces[pieceCount];piece=BOARD[from];if(LMIcheckers&&LMIpinCount&&LMIq[from]&PINNED){continue}if(piece&PAWN){offsets=PIECE_OFFSETS[piece];
if(LMIpinCount===0||(LMIq[from]&PINNED)===0||LMIq[from]>>PINNED_SHIFT===16){to=from+offsets[0];if(BOARD[to]===0){addPawnMove(from,to,0);
if(SECOND_RANK[us]===rank(from)){to+=offsets[0];if(!BOARD[to]){addPawnMove(from,to,BITS.BIG_PAWN)}}}}for(j=1;j<3;++j){offset=offsets[j];
to=from+offset;if(to&136||LMIpinCount&&LMIq[from]&PINNED&&LMIq[from]>>PINNED_SHIFT!==Math.abs(offset)){continue}if(BOARD[to]&them){
addPawnMove(from,to,BITS.CAPTURE)}else if(to===EP_SQUARE&&validateEnPassant(from,to)){LMoves[LMovesIndex++]=BITS.EP_CAPTURE|from<<FROM_SHIFT|to<<TO_SHIFT;
}}}else{if(LMIpinCount&&LMIq[from]&PINNED){if(piece&KNIGHT){continue}if(ATTACKS[from-KINGS[us]+119]&piece){offset=LMIq[from]>>PINNED_SHIFT;
offsets=[offset,-offset]}else{continue}}else{offsets=PIECE_OFFSETS[piece&TYPE_MASK]}fromShift=from<<FROM_SHIFT;if(from===kingSquare){
for(j=0;j<8;++j){offset=offsets[j];to=from+offset;if((to&136)===0){if(!BOARD[to]){if((LMIq[to]&ATTACKED)===0){LMoves[LMovesIndex++]=fromShift|to<<TO_SHIFT;
}}else if(BOARD[to]&them){if((LMIq[to]&ATTACKED)===0){LMoves[LMovesIndex++]=BITS.CAPTURE|fromShift|to<<TO_SHIFT}}}}if(LMIcheckers===0){
addCastlingMoves(us)}}else{len=offsets.length;isSliding=piece&SLIDING;for(j=0;j<len;++j){offset=offsets[j];to=from;while(true){to+=offset;
if(to&136){break}if(BOARD[to]){if(BOARD[to]&them){if(LMIcheckers===0||LMIq[to]&MUST_OCCUPY){LMoves[LMovesIndex++]=BITS.CAPTURE|fromShift|to<<TO_SHIFT;
}}break}else{if(LMIcheckers===0||LMIq[to]&MUST_OCCUPY){LMoves[LMovesIndex++]=fromShift|to<<TO_SHIFT}}if(!isSliding){break}}}}}}if(IS_DROP){
drop(noDrop,findType,us)}return LMovesIndex}function inCheckAfterMove(pieceAfterPromotion,from,to,flags){var kingSquare;var toAttack;
var fromAttack;var offset;var attackedSquare;var isSliding;var attackingPiece;var epSquare;var castling;if(VARIANT===VARIANTS["King of the Hill"]&&pieceAfterPromotion&KING&&kingOfTheHillWin(to)){
return true}if(flags&BITS.KQSIDE_CASTLE){if(TURN===WHITE){to=flags&BITS.KSIDE_CASTLE?117:115}else{to=flags&BITS.KSIDE_CASTLE?5:3}
pieceAfterPromotion=ROOK;castling=true}kingSquare=KINGS[swapColor(TURN)];if(kingSquare===EMPTY){return false}if((pieceAfterPromotion&KING)===0){
toAttack=ATTACKS[to-kingSquare+119];if(toAttack&pieceAfterPromotion){offset=RAYS[to-kingSquare+119];isSliding=pieceAfterPromotion&SLIDING;
attackedSquare=to+offset;while((attackedSquare&136)===0){if(attackedSquare===kingSquare){if(pieceAfterPromotion&PAWN){if((pieceAfterPromotion&COLOR_MASK)===WHITE?kingSquare-to<0:kingSquare-to>0){
return true}break}return true}if(attackedSquare!==from&&BOARD[attackedSquare]||!isSliding){break}attackedSquare+=offset}}}if(!castling){
fromAttack=ATTACKS[from-kingSquare+119];if(fromAttack&SLIDING){offset=RAYS[from-kingSquare+119];if(offset!==RAYS[to-kingSquare+119]){
attackedSquare=kingSquare-offset;while((attackedSquare&136)===0){if(attackedSquare!==from){attackingPiece=BOARD[attackedSquare];if(attackingPiece){
if(attackingPiece&TURN&&fromAttack&attackingPiece&&attackingPiece&SLIDING){return true}break}}attackedSquare-=offset}}}if(flags&BITS.EP_CAPTURE){
epSquare=to+16*(TURN===WHITE?1:-1);fromAttack=ATTACKS[epSquare-kingSquare+119];if(fromAttack&SLIDING){offset=RAYS[epSquare-kingSquare+119];
attackedSquare=kingSquare-offset;while((attackedSquare&136)===0){if(attackedSquare!==from&&attackedSquare!==epSquare){if(attackedSquare===to){
break}attackingPiece=BOARD[attackedSquare];if(attackingPiece){if(attackingPiece&TURN&&fromAttack&attackingPiece&&attackingPiece&SLIDING){
return true}break}}attackedSquare-=offset}}}}return false}function moveToSan(move,skipSymbol){var san="";var additionalInfo;var from;
var to;var piece;var oldLMovesStart;var oldLMovesPieces;if(move&BITS.KQSIDE_CASTLE){if(move&BITS.KSIDE_CASTLE){san="O-O"}else{san="O-O-O";
}}else if(move&BITS.DROP){to=move>>TO_SHIFT&SQUARE_MASK;additionalInfo=move>>ADDITIONAL_SHIFT;if(additionalInfo){san+=HAND_PIECES_SAN[additionalInfo];
}san+="@"+algebraic(to)}else{to=move>>TO_SHIFT&SQUARE_MASK;from=move>>FROM_SHIFT&SQUARE_MASK;piece=BOARD[from];if(piece&PAWN){if(move&BITS.ANY_CAPTURE){
san+=String.fromCharCode(file(from)+97)+"x"}san+=algebraic(to);if(move&BITS.PROMOTION){additionalInfo=move>>ADDITIONAL_SHIFT;san+="="+HAND_PIECES_SAN[additionalInfo];
}}else{san+=TYPES_SAN_REVERSED[piece&PIECE_MASK];if(LMovesPieces>1){san+=getDisambiguator(piece,from,to)}if(move&BITS.ANY_CAPTURE){
san+="x"}san+=algebraic(to)}}if(!skipSymbol){if(move&BITS.KQSIDE_CASTLE){from=move>>FROM_SHIFT&SQUARE_MASK;to=move>>TO_SHIFT&SQUARE_MASK;
}else{if(move&BITS.DROP_OR_PROMOTE){piece=HAND_PIECES[additionalInfo]+TURN}}if(inCheckAfterMove(piece,from,to,move)){makeMove(move,from,to,additionalInfo);
oldLMovesStart=LMovesStart;LMovesStart=LMovesIndex;oldLMovesPieces=LMovesPieces;if(VARIANT!==VARIANTS.Chess&&isVariantWin()){san+="#";
}else if(generateMoves()-LMovesStart){san+="+"}else{san+="#"}LMovesIndex=LMovesStart;LMovesStart=oldLMovesStart;LMovesPieces=oldLMovesPieces;
reverseMove(HISTORY.pop())}}return san}function attacked(color,square){var i;var piece;var attackerSquare;var index;var offsets=PIECE_OFFSETS[KNIGHT];
var offset;var attackingPiece=KNIGHT|color;for(i=0;i<8;++i){attackerSquare=square+offsets[i];if((attackerSquare&136)===0){piece=BOARD[attackerSquare];
if((piece&attackingPiece)===attackingPiece){return true}}}offsets=PIECE_OFFSETS[KING];for(i=0;i<8;++i){offset=offsets[i];attackerSquare=square+offset;
index=offset+119;while((attackerSquare&136)===0){piece=BOARD[attackerSquare];if(piece){if(piece&color&&ATTACKS[square-attackerSquare+119]&piece){
if(piece&PAWN){if(color===WHITE?square-attackerSquare<0:square-attackerSquare>0){return true}}else{return true}}break}attackerSquare+=offset;
}}return false}function kingAttacked(color){return KINGS[color]!==EMPTY&&attacked(swapColor(color),KINGS[color])}function inCheck(){
return kingAttacked(TURN)}function inCheckmate(){return inCheck()&&generateMoves()===0}function inStalemate(){var res=!inCheck()&&generateMoves()===0;
if(res&&VARIANT===VARIANTS.Bughouse&&!CHESS.isDependent){res=CHESS.siblingGame.inStalemate()}return res}function insufficientMaterial(color){
var piece;var i;var sufficient=100;var knights=0;var bishops=0;var darkBishops=0;for(i=0;i<120;++i){if(i&136){i+=8}piece=BOARD[i];
if(piece){if(color&&(piece&color)===0){continue}if(sufficient&piece){return false}if(piece&KNIGHT){if(bishops||knights++){return false;
}}else if(piece&BISHOP){if(knights){return false}++bishops;if((rank(i)+i)%2){++darkBishops}if(darkBishops&&bishops!==darkBishops){
return false}}}}return true}function inThreefoldRepetition(){if(HALF_MOVES<8){return false}var hash=getCurrentHash();var foundSecond=false;
var checkHash;var halfMoves=HALF_MOVES;var stop=false;var line=HISTORY;var i=line.length-1;for(;;){i-=2;if(i<0){if(line.id){i=line.atMoveNode+i+2;
line=LINES[line.parentId];continue}if(i===-2){return false}checkHash=line.hash;stop=true}else{checkHash=line[i].hash;if(line[i].halfMoves>halfMoves||halfMoves<2){
stop=true}else{halfMoves=line[i].halfMoves}}if(checkHash[0]===hash[0]&&checkHash[1]===hash[1]){if(foundSecond){return true}foundSecond=true;
}if(stop){return false}}}function modifyHand(historyMove){var move=historyMove.move;var handChange;var whichHand;var captured;var drop;
var numberOfPieces;var whichHash;var whichHistory;var handShifts;var zobristHandHash;var handColor;if(VARIANT===VARIANTS.Crazyhouse||move&BITS.DROP){
whichHand=CHESS._hand;whichHash=historyMove.hash;handColor=historyMove.color}else{whichHand=CHESS.siblingGame._hand;historyMove.handSibling=true;
if(HASHING){whichHistory=CHESS.siblingGame._history();if(whichHistory.length){whichHash=whichHistory[whichHistory.length-1].hash}else{
if(!whichHistory.hash){whichHistory.hash=CHESS.siblingGame._hashPosition()}whichHash=whichHistory.hash}}handColor=swapColor(historyMove.color);
}if(historyMove.captured){if(historyMove.captured&WAS_PROMOTED){captured=PAWN}else{captured=historyMove.captured&TYPE_MASK}switch(captured&TYPE_MASK){
case PAWN:handShifts=0;break;case KNIGHT:handShifts=1;break;case BISHOP:handShifts=2;break;case ROOK:handShifts=3;break;default:handShifts=4;
}handChange=1<<HAND_SHIFTS[handShifts];if(HASHING){numberOfPieces=whichHand[handColor]>>HAND_SHIFTS[handShifts]&HAND_MASKS[handShifts];
zobristHandHash=BOOK_READER.zobristPiece[numberOfPieces+63*handShifts+(handColor===WHITE?0:315)]}}else{drop=move>>ADDITIONAL_SHIFT;
handChange=-1<<HAND_SHIFTS[drop];if(HASHING){numberOfPieces=whichHand[handColor]>>HAND_SHIFTS[drop]&HAND_MASKS[drop];zobristHandHash=BOOK_READER.zobristPiece[numberOfPieces-1+63*drop+(handColor===WHITE?0:315)];
}}whichHand[handColor]+=handChange;historyMove.handChange=handChange;if(HASHING){hashNum(whichHash,[zobristHandHash[0]*31>>>0,zobristHandHash[1]*17>>>0]);
}}function makeMoveChess(move,from,to,additionalInfo){var us=TURN;var them=swapColor(us);var castlingTo;var castlingFrom;var rookFile;
var hash;var historyMove={move:move,epSquare:EP_SQUARE,halfMoves:HALF_MOVES,castlingW:CASTLING[WHITE],castlingB:CASTLING[BLACK],color:us
};var tempEPSquare;var tempEPPiece;var isWhite=us===WHITE;var originalPiece;var capturedPiece;if(HASHING){hash=getCurrentHash();historyMove.hash=hash;
hashNum(hash,BOOK_READER.zobristTurn);if(EP_SQUARE!==EMPTY){hashEP(BOARD,hash,EP_SQUARE+(isWhite?16:-16),PAWN|us)}}if((move&BITS.KQSIDE_CASTLE)===0){
if(IS_DROP&&move&BITS.DROP){BOARD[to]=HAND_PIECES[additionalInfo]|us;if(HASHING){hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[BOARD[to]]+8*(7-rank(to))+file(to)]);
}modifyHand(historyMove);originalPiece=0}else{originalPiece=BOARD[from];capturedPiece=BOARD[to];if(capturedPiece){historyMove.captured=capturedPiece;
if(HASHING){hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[BOARD[to]&PIECE_MASK]+8*(7-rank(to))+file(to)]);
}if(capturedPiece&ROOK&&CASTLING[them]){if(IS_960){if(rank(to)===(!isWhite?7:0)){rookFile=1<<file(to);if(CASTLING[them]&rookFile){
CASTLING[them]^=rookFile;if(HASHING){if(rookFile>1<<file(KINGS[us])){hashNum(hash,BOOK_READER.zobristCastle[them-1])}else{hashNum(hash,BOOK_READER.zobristCastle[them+1]);
}}}}}else{if(to===(!isWhite?119:7)){if(CASTLING[them]&BITS.KSIDE_CASTLE){CASTLING[them]^=BITS.KSIDE_CASTLE;if(HASHING){hashNum(hash,BOOK_READER.zobristCastle[them-1]);
}}}else if(to===(!isWhite?112:0)){if(CASTLING[them]&BITS.QSIDE_CASTLE){CASTLING[them]^=BITS.QSIDE_CASTLE;if(HASHING){hashNum(hash,BOOK_READER.zobristCastle[them+1]);
}}}}}}if(move&BITS.PROMOTION){BOARD[to]=HAND_PIECES[additionalInfo]|us|WAS_PROMOTED}else{BOARD[to]=BOARD[from]}BOARD[from]=0;if(HASHING){
hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[originalPiece&PIECE_MASK]+8*(7-rank(from))+file(from)]);
hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[BOARD[to]&PIECE_MASK]+8*(7-rank(to))+file(to)])}}}else{
originalPiece=KING}if(move&BITS.EP_CAPTURE){if(isWhite){tempEPPiece=to+16;tempEPSquare=6}else{tempEPPiece=to-16;tempEPSquare=8}historyMove.captured=PAWN|them;
BOARD[tempEPPiece]=0;if(HASHING){hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[PAWN|them]+8*(tempEPSquare-rank(to))+file(to)]);
}}else if(originalPiece&KING){if(IS_960){if(move&BITS.KQSIDE_CASTLE){BOARD[to]=0;BOARD[from]=0;if(move&BITS.KSIDE_CASTLE){if(isWhite){
castlingTo=118;castlingFrom=117}else{castlingTo=6;castlingFrom=5}}else{if(isWhite){castlingTo=114;castlingFrom=115}else{castlingTo=2;
castlingFrom=3}}BOARD[castlingTo]=us|KING;BOARD[castlingFrom]=us|ROOK;if(HASHING){hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[KING|us]+8*(7-rank(from))+file(from)]);
hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[ROOK|us]+8*(7-rank(to))+file(to)]);hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[KING|us]+8*(7-rank(castlingTo))+file(castlingTo)]);
hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[ROOK|us]+8*(7-rank(castlingFrom))+file(castlingFrom)]);
}}if(HASHING){if((CASTLING[us]&CASTLING[us]-1)!==0){hashNum(hash,BOOK_READER.zobristCastle[us-1]);hashNum(hash,BOOK_READER.zobristCastle[us+1]);
}else if(CASTLING[us]>1<<file(KINGS[us])){hashNum(hash,BOOK_READER.zobristCastle[us-1])}else{hashNum(hash,BOOK_READER.zobristCastle[us+1]);
}}KINGS[us]=castlingTo||to}else{if(move&BITS.KQSIDE_CASTLE){BOARD[to]=BOARD[from];BOARD[from]=0;if(move&BITS.KSIDE_CASTLE){castlingTo=to-1;
castlingFrom=to+1}else{castlingTo=to+1;castlingFrom=to-2}BOARD[castlingTo]=BOARD[castlingFrom];BOARD[castlingFrom]=0;if(HASHING){
hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[KING|us]+8*(7-rank(from))+file(from)]);hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[ROOK|us]+8*(7-rank(castlingFrom))+file(castlingFrom)]);
hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[KING|us]+8*(7-rank(to))+file(to)]);hashNum(hash,BOOK_READER.zobristPiece[64*BOOK_READER.zobristPieceValueNumbers[ROOK|us]+8*(7-rank(castlingTo))+file(castlingTo)]);
}}if(HASHING){if(CASTLING[us]&BITS.KSIDE_CASTLE){hashNum(hash,BOOK_READER.zobristCastle[us-1])}if(CASTLING[us]&BITS.QSIDE_CASTLE){
hashNum(hash,BOOK_READER.zobristCastle[us+1])}}KINGS[us]=to}CASTLING[us]=0}else if(originalPiece&ROOK&&CASTLING[us]){if(IS_960){if(rank(from)===(isWhite?7:0)){
rookFile=1<<file(from);if(CASTLING[us]&rookFile){CASTLING[us]^=rookFile;if(HASHING){if(rookFile>1<<file(KINGS[us])){hashNum(hash,BOOK_READER.zobristCastle[us-1]);
}else{hashNum(hash,BOOK_READER.zobristCastle[us+1])}}}}}else{if(from===(isWhite?119:7)){if(CASTLING[us]&BITS.KSIDE_CASTLE){CASTLING[us]^=BITS.KSIDE_CASTLE;
if(HASHING){hashNum(hash,BOOK_READER.zobristCastle[us-1])}}}else if(from===(isWhite?112:0)){if(CASTLING[us]&BITS.QSIDE_CASTLE){CASTLING[us]^=BITS.QSIDE_CASTLE;
if(HASHING){hashNum(hash,BOOK_READER.zobristCastle[us+1])}}}}}if(move&BITS.BIG_PAWN){if(!isWhite){EP_SQUARE=to-16}else{EP_SQUARE=to+16;
}if(HASHING){hashEP(BOARD,hash,to,PAWN|them)}}else{EP_SQUARE=EMPTY}if(originalPiece&PAWN||move&BITS.ANY_CAPTURE){HALF_MOVES=0}else{
HALF_MOVES++}TURN=them;HISTORY.push(historyMove)}function makeNullMove(){var historyMove={color:TURN,san:"--",epSquare:EP_SQUARE};
var ret={color:TURN,san:"--"};var hash;if(HASHING){hash=getCurrentHash();historyMove.hash=hash;hashNum(hash,BOOK_READER.zobristTurn);
if(EP_SQUARE!==EMPTY){hashEP(BOARD,hash,EP_SQUARE+(TURN===WHITE?16:-16),PAWN|TURN)}}EP_SQUARE=EMPTY;HALF_MOVES++;TURN=swapColor(TURN);
if(TURN===WHITE){++MOVE_NUMBER}HISTORY.push(historyMove);return ret}function makeMoveVariant(move,from,to,additionalInfo){var historyMove;
var us=TURN;makeMoveChess(move,from,to,additionalInfo);historyMove=HISTORY[HISTORY.length-1];if(IS_DROP){HALF_MOVES=historyMove.halfMoves+1;
if(historyMove.captured){modifyHand(historyMove)}if(VARIANT===VARIANTS.Bughouse){historyMove.bughouseOrder=CHESS.moveCount()-1+CHESS.siblingGame.moveCount();
}}else if(VARIANT===VARIANTS["3-check"]&&kingAttacked(TURN)){historyMove.checked=true;if(HASHING){if(CHECKS[us]){hashNum(historyMove.hash,BOOK_READER.zobristCheck[CHECKS[us]+(us===WHITE?-1:2)]);
}}++CHECKS[us];if(HASHING){hashNum(historyMove.hash,BOOK_READER.zobristCheck[CHECKS[us]+(us===WHITE?-1:2)])}}}function reverseMove(old){
var castlingTo;var castlingFrom;var them=TURN;var us=swapColor(them);var move=old.move;var to=move>>TO_SHIFT&SQUARE_MASK;var from=move>>FROM_SHIFT&SQUARE_MASK;
TURN=us;CASTLING[BLACK]=old.castlingB;CASTLING[WHITE]=old.castlingW;EP_SQUARE=old.epSquare;HALF_MOVES=old.halfMoves;if(VARIANT){if(IS_960&&move&BITS.KQSIDE_CASTLE){
if(move&BITS.KSIDE_CASTLE){if(us===WHITE){castlingFrom=118;castlingTo=117}else{castlingFrom=6;castlingTo=5}}else{if(us===WHITE){castlingFrom=114;
castlingTo=115}else{castlingFrom=2;castlingTo=3}}BOARD[castlingFrom]=0;BOARD[castlingTo]=0;BOARD[from]=us|KING;BOARD[to]=us|ROOK;KINGS[us]=from;
return}if(old.handChange){if(VARIANT===VARIANTS.Crazyhouse||!old.handSibling){CHESS._hand[us]-=old.handChange}else{CHESS.siblingGame._hand[swapColor(us)]-=old.handChange;
}}if(move&BITS.DROP){BOARD[to]=0;return}if(old.checked){--CHECKS[us]}}if(move&BITS.PROMOTION){BOARD[from]=PAWN|us;if(move&BITS.CAPTURE){
BOARD[to]=old.captured}else{BOARD[to]=0}}else{BOARD[from]=BOARD[to];if(move&BITS.KQSIDE_CASTLE){BOARD[to]=0;if(move&BITS.KSIDE_CASTLE){
castlingTo=to+1;castlingFrom=to-1}else{castlingTo=to-2;castlingFrom=to+1}BOARD[castlingTo]=us|ROOK;BOARD[castlingFrom]=0;KINGS[us]=from;
}else{if(to===KINGS[us]){KINGS[us]=from}if(move&BITS.CAPTURE){BOARD[to]=old.captured}else{BOARD[to]=0;if(move&BITS.EP_CAPTURE){BOARD[to-(us===WHITE?-16:16)]=PAWN|them;
}}}}}function getDisambiguator(piece,from,to){var ambigMove;var ambigPiece;var ambiguities;var ambigFrom;var sameFile;var sameRank;
var ambigTo;var i;if(LMovesIndex<2){return""}piece=piece&TYPE_MASK;for(i=0;i<LMovesIndex;++i){ambigMove=LMoves[i];ambigTo=ambigMove>>TO_SHIFT;
if(to===ambigTo){ambigFrom=ambigMove>>FROM_SHIFT&SQUARE_MASK;if(ambigFrom!==from){ambigPiece=BOARD[ambigFrom];if(ambigPiece&piece){
ambiguities=true;if(rank(from)===rank(ambigFrom)){if(sameFile){return algebraic(from)}sameRank=true}if(file(from)===file(ambigFrom)){
if(sameRank){return algebraic(from)}sameFile=true}}}}}if(ambiguities){if(sameFile){return String(8-rank(from))}return String.fromCharCode(file(from)+97);
}return""}function beautifyMove(moveNum,knownSan,skipSymbol){var from;var additionalInfo;var to=moveNum>>TO_SHIFT&SQUARE_MASK;var move={
color:TURN,to:algebraic(to),flags:moveNum&SQUARE_MASK};if(!IS_DROP||(moveNum&BITS.DROP)===0){from=moveNum>>FROM_SHIFT&SQUARE_MASK;
move.from=algebraic(from);move.piece=BOARD[from];if(moveNum&BITS.PROMOTION){additionalInfo=moveNum>>ADDITIONAL_SHIFT;move.promotion=HAND_PIECES[additionalInfo]+TURN;
}if(moveNum&BITS.CAPTURE){move.captured=BOARD[to]}else if(moveNum&BITS.EP_CAPTURE){move.captured=PAWN|swapColor(TURN)}}else{additionalInfo=moveNum>>ADDITIONAL_SHIFT;
move.drop=additionalInfo;move.piece=HAND_PIECES[additionalInfo]+TURN}if(knownSan){move.san=knownSan}else{move.san=moveToSan(moveNum,skipSymbol);
}return move}function isVariantWin(){if(VARIANT===VARIANTS["3-check"]){return CHECKS[swapColor(TURN)]===3}else if(VARIANT===VARIANTS["King of the Hill"]){
return kingOfTheHillWin(KINGS[swapColor(TURN)])}}function isBughouseWin(){if(VARIANT===VARIANTS.Bughouse){return CHESS.siblingGame.inCheckmate();
}}function isBughouseDraw(){if(VARIANT===VARIANTS.Bughouse){return CHESS.siblingGame.in50MoveRule()||CHESS.siblingGame.inThreefoldRepetition();
}}function createVariation(){var newLine=[];var curFen=generateFen();var historyCount=HISTORY.length-1;var curMove=HISTORY[historyCount];
if(!curMove){return false}newLine.parentId=CUR_LINE;newLine.id=LINES.length;HISTORY.curFen=curFen;if(!curMove.lines){curMove.lines=[];
}curMove.lines.push(newLine.id);if(curMove.move){reverseMove(curMove)}else{EP_SQUARE=curMove.epSquare;--HALF_MOVES;TURN=swapColor(TURN);
}if(TURN===BLACK){--MOVE_NUMBER}newLine.atMoveNode=historyCount;if(historyCount){newLine.hash=HISTORY[historyCount-1].hash}else{newLine.hash=HISTORY.hash;
}CUR_LINE=newLine.id;LINES.push(newLine);HISTORY=newLine;return true}function selectLine(id){var curFen=generateFen();HISTORY.curFen=curFen;
HISTORY=LINES[id];CUR_LINE=id;load(HISTORY.curFen,VARIANT,true,true)}CHESS={WHITE:WHITE,BLACK:BLACK,PAWN:PAWN,KNIGHT:KNIGHT,BISHOP:BISHOP,
ROOK:ROOK,QUEEN:QUEEN,KING:KING,FLAGS:BITS,load:load,reset:reset,moves:function(options){var moves=[];var i;var postProcessingFunc=moveToSan;
var type;var noDrop;if(options){if(options.verbose){postProcessingFunc=beautifyMove}if(options.type){type=options.type|options.type<<24;
}noDrop=options.noDrop}generateMoves(type,noDrop);for(i=0;i<LMovesIndex;++i){moves.push(postProcessingFunc(LMoves[i]))}return moves;
},inCheck:inCheck,inCheckmate:inCheckmate,inStalemate:inStalemate,isBughouseWin:isBughouseWin,in50MoveRule:function(){return HALF_MOVES>=100;
},inDraw:function(){return HALF_MOVES>=100||inStalemate()||insufficientMaterial()||inThreefoldRepetition()||Boolean(isBughouseDraw());
},insufficientMaterial:insufficientMaterial,inThreefoldRepetition:inThreefoldRepetition,isVariantWin:isVariantWin,gameOver:function(){
return CHESS.inDraw()||inCheckmate()||Boolean(isVariantWin())||Boolean(isBughouseWin())},isPositionValid:function(options){var i;var kingColor;
var kingCount=0;var piece;options=options||{};if(options.pawns!==false){i=0;while(i<=119){piece=BOARD[i];if(piece&PAWN){return false;
}if(++i===8){i=112}}}if(options.kings!==false){for(i=0;i<=119;++i){if(i&136){i+=8}piece=BOARD[i];if(piece&KING){if(++kingCount>2){
return false}if(kingColor&&kingColor&piece){return false}kingColor=piece&COLOR_MASK}}if(kingCount!==2){return false}}if(options.check!==false){
if(!(options.kings===false&&KINGS[swapColor(TURN)]===EMPTY)){if(kingAttacked(swapColor(TURN))){return false}}}return true},validateFen:validateFen,
fen:generateFen,pgn:function(options){options=options||{};if(!options.useResultHeader&&!CUR_LINE){if(isVariantWin()||inCheckmate()){
HEADER.Result=TURN===BLACK?"1-0":"0-1"}else if(CHESS.inStalemate()){HEADER.Result="1/2-1/2"}else if(isBughouseWin()){HEADER.Result=CHESS.siblingGame.turn()===WHITE?"1-0":"0-1";
}}return generatePgn(options,HEADER,LINES,STARTING_MOVE_NUMBER,VARIANT,CHESS)},loadPgn:function(pgn,index,options){var tokenIndex;
var len;var token;var tokens;var newHeaders={};var whichGame;var whichHistory;var skipLine=0;var startingFen;if(typeof index!=="number"){
options=options||index;index=0}options=options||{};if(typeof pgn==="string"){if(options.singleGame){pgn=pgn.replace(/(?:\r?\n\s*){2,}/g,"\n");
}pgn=CHESS.tokenizePgn(pgn,options)}if(index<0){index=pgn.length+index}tokens=pgn[index];if(!tokens){return false}reset();len=tokens.length;
for(tokenIndex=0;tokenIndex<len;++tokenIndex){token=tokens[tokenIndex];if(token.type!=="tagName"){break}if(!tokens[tokenIndex+1]||tokens[tokenIndex+1].type!=="tagValue"){
return false}++tokenIndex;if(token.value==="FEN"){startingFen=completeFen(tokens[tokenIndex].value)}else{newHeaders[token.value]=tokens[tokenIndex].value;
}}if(newHeaders.Variant&&!startingFen){startingFen=DEFAULT_POSITION}if(startingFen||newHeaders.SetUp==="1"){if(newHeaders.SetUp==="0"){
newHeaders.FEN=startingFen}else if(!startingFen||!load(startingFen,newHeaders.Variant)){return false}}CHESS.header(newHeaders);whichGame=CHESS;
whichHistory=whichGame._history();for(;tokenIndex<len;++tokenIndex){token=tokens[tokenIndex];if(token.type==="san"&&skipLine===0){
if(!whichGame.move(token.value)){if(options.skipBadLines&&(CUR_LINE!==0||HISTORY.length&&options.allowBadMainLine)){skipLine=1}else{
reset();return false}}}else if(token.type==="result"&&HEADER.Result==="*"){setHeader(["Result",token.value])}else if(token.type==="a"&&skipLine===0&&whichHistory[whichHistory.length-1]){
whichHistory[whichHistory.length-1].annotation=token.value}else if((token.type==="nag"||token.type==="aa")&&skipLine===0&&whichHistory[whichHistory.length-1]){
if(!whichHistory[whichHistory.length-1].additionalAnnotation){whichHistory[whichHistory.length-1].additionalAnnotation=[]}if(whichHistory[whichHistory.length-1].additionalAnnotation.indexOf(token.value)===-1){
whichHistory[whichHistory.length-1].additionalAnnotation.push(token.value)}}else if(token.type==="comment"&&skipLine===0){if(whichHistory.length){
if(token.value.trim()){whichHistory[whichHistory.length-1].comment=token.value}if(token.commands){whichHistory[whichHistory.length-1].commands=token.commands;
if(token.commands.clk){whichHistory[whichHistory.length-1].time=timestampToTime(token.commands.clk)}}}else{whichHistory.initComment=String(token.value);
if(token.commands){whichHistory.commands=token.commands}}}else if(token.type==="variationStart"){if(skipLine>0){++skipLine}else{if(!createVariation()){
reset();return false}}whichHistory=whichGame._history()}else if(token.type==="variationEnd"){if(skipLine>0){--skipLine}if(skipLine===0){
selectLine(whichHistory.parentId);whichHistory=whichGame._history()}}else if(token.type==="number"&&VARIANT===VARIANTS.Bughouse){
if(/b/i.test(token.value.slice(-1))){whichGame=CHESS.siblingGame}else{whichGame=CHESS}whichHistory=whichGame._history()}}return true;
},header:function(headers){if(Array.isArray(headers)){return setHeader(headers)}else if(typeof headers==="object"){Object.keys(headers).forEach(function(name){
setHeader([name,headers[name]])});return HEADER}return HEADER},turn:function(newTurn){if(newTurn===WHITE||newTurn===BLACK){TURN=newTurn;
}return TURN},move:function playMove(move){var tmpMoveNum;var moveNum;var additionalInfo;var i;var prettyMove;var sanMove;var from;
var to;var legalMoveOptionsType;var legalMoveOptionsNoDrop;var checkMove;var lastHistory;var pieceAfterPromotion;if(typeof move==="string"){
i=move.length-1;switch(move[i]){case"+":case"#":move=move.substr(0,i)}if(SYMBOLS.indexOf(move[0])>6){legalMoveOptionsType=PIECES_BASE[move[0]];
}else if(move[0]==="O"){legalMoveOptionsType=KING}else{legalMoveOptionsType=PAWN}if(IS_DROP){if(move.indexOf("@")===-1){legalMoveOptionsNoDrop=true;
}else{legalMoveOptionsNoDrop=false;legalMoveOptionsType<<=24}}generateMoves(legalMoveOptionsType,legalMoveOptionsNoDrop);for(i=0;i<LMovesIndex;++i){
sanMove=moveToSan(LMoves[i],true);if(move===sanMove){moveNum=LMoves[i];break}}if(moveNum){from=moveNum>>FROM_SHIFT&SQUARE_MASK;to=moveNum>>TO_SHIFT&SQUARE_MASK;
additionalInfo=moveNum>>ADDITIONAL_SHIFT}else if(move==="--"){return makeNullMove()}else if(move=Chess.fixSanMove(move,BOARD,TURN)){
return playMove(move)}else{return null}}else{if(move.drop){switch(move.drop){case"p":additionalInfo=0;break;case"n":additionalInfo=1;
break;case"b":additionalInfo=2;break;case"r":additionalInfo=3;break;case"q":additionalInfo=4;break;default:return null}legalMoveOptionsType=1<<26+additionalInfo;
}else{if(move.promotion){switch(move.promotion){case"q":additionalInfo=4;break;case"n":additionalInfo=1;break;case"r":additionalInfo=3;
break;case"b":additionalInfo=2;break;default:return null}}from=SQUARES[move.from];legalMoveOptionsNoDrop=true;legalMoveOptionsType=BOARD[from]&TYPE_MASK;
}to=SQUARES[move.to];tmpMoveNum=((additionalInfo?additionalInfo<<ADDITIONAL_SHIFT:0)|to<<TO_SHIFT)>>FROM_SHIFT|from;generateMoves(legalMoveOptionsType,legalMoveOptionsNoDrop);
for(i=0;i<LMovesIndex;++i){if(LMoves[i]>>FROM_SHIFT===tmpMoveNum){moveNum=LMoves[i];break}}if(!moveNum){if(move=Chess.fixObjMove(move,BOARD,TURN)){
return playMove(move)}return null}}if(moveNum&BITS.DROP_OR_PROMOTE){pieceAfterPromotion=HAND_PIECES[additionalInfo]+TURN}else{pieceAfterPromotion=BOARD[from];
}prettyMove=beautifyMove(moveNum,sanMove,true);checkMove=inCheckAfterMove(pieceAfterPromotion,from,to,moveNum);makeMove(moveNum,from,to,additionalInfo);
if(checkMove){if(VARIANT!==VARIANTS.Chess&&isVariantWin()){prettyMove.san+="#"}else if(generateMoves()===0){prettyMove.san+="#"}else{
prettyMove.san+="+"}}lastHistory=HISTORY[HISTORY.length-1];lastHistory.san=prettyMove.san;if(prettyMove.piece&WAS_PROMOTED){lastHistory.promoted=true;
}if(TURN===WHITE){++MOVE_NUMBER}return prettyMove},undo:function(quick){var historyMove=HISTORY.pop();if(!historyMove){return null;
}if(TURN===WHITE){--MOVE_NUMBER}if(!historyMove.move){EP_SQUARE=historyMove.epSquare;--HALF_MOVES;TURN=swapColor(TURN);return quick?true:{
san:"--",color:historyMove.color}}reverseMove(historyMove);return quick?true:beautifyMove(historyMove.move,historyMove.san)},clear:function(thisVariant){
clear(thisVariant)},put:function(piece,square,skipUpdating){var sq=SQUARES[square];var foundKing=false;var i;var replacedPiece=BOARD[sq];
var replacedColor=replacedPiece&COLOR_MASK;var newPieceColor=piece.color;if(isNaN(sq)||!piece.type||!newPieceColor||SYMBOLS.indexOf(piece.type)===-1){
return false}BOARD[sq]=PIECES_BASE[piece.type]|newPieceColor|(piece.promoted?WAS_PROMOTED:0);if(BOARD[sq]&KING){KINGS[newPieceColor]=sq;
}if(replacedPiece&&BOARD[KINGS[replacedColor]]&&BOARD[KINGS[replacedColor]]!==(KING|replacedColor)){for(i=0;i<120;++i){if(i&136){
i+=8}if(BOARD[i]===(KING|replacedColor)){KINGS[replacedColor]=i;foundKing=true}}if(!foundKing){KINGS[replacedColor]=EMPTY}}if(!skipUpdating){
load(generateFen(),VARIANT,true,false)}return true},get:get,remove:function(square,skipUpdating){var piece=BOARD[SQUARES[square]];
var pieceObj=get(square);var pieceColor=piece&COLOR_MASK;var i;BOARD[SQUARES[square]]=0;if(piece&KING){KINGS[pieceColor]=EMPTY;CASTLING[pieceColor]=0;
for(i=0;i<120;++i){if(i&136){i+=8}if(BOARD[i]===(KING|pieceColor)){KINGS[piece.color]=i;break}}}if(!skipUpdating){load(generateFen(),VARIANT,true,false);
}return pieceObj},history:function(verbose,noParentLines){var moveHistory=[];var verboseMove;var line=HISTORY;var i=line.length;for(;;){
if(--i===-1){if(line.id&&!noParentLines){i=line.atMoveNode;line=LINES[line.parentId];continue}else{break}}if(verbose){verboseMove=beautifyMove(line[i].move,line[i].san);
verboseMove.color=line[i].color;if(!i&&line.initComment){verboseMove.firstComment=line.initComment}if(line[i].comment!==undefined){
verboseMove.comment=line[i].comment}if(line[i].time!==undefined){verboseMove.time=line[i].time}if(line[i].annotation!==undefined){
verboseMove.annotation=line[i].annotation}if(line[i].additionalAnnotation!==undefined){verboseMove.additionalAnnotation=line[i].additionalAnnotation;
}if(line[i].commands!==undefined){verboseMove.commands=line[i].commands}if(line[i].captured!==undefined){verboseMove.captured=line[i].captured;
}if(line[i].promoted!==undefined){verboseMove.promoted=line[i].promoted}if(line[i].lines!==undefined){verboseMove.lines=line[i].lines;
}if(line[i].bughouseOrder!==undefined){verboseMove.bughouseOrder=line[i].bughouseOrder}if(SYMBOLS.indexOf(line[i].san[0])>6){verboseMove.piece=PIECES_BASE[line[i].san[0]];
}else if(line[i].san[0]==="O"){verboseMove.piece=KING}else{verboseMove.piece=PAWN}verboseMove.piece|=verboseMove.color;moveHistory.unshift(verboseMove);
}else{moveHistory.unshift(line[i].san)}}return moveHistory},hashes:function(){var hashes=[];var line=HISTORY;var i=line.length;for(;;){
if(--i===-1){if(line.id){i=line.atMoveNode;line=LINES[line.parentId];continue}else{if(!line.hash){getCurrentHash()}hashes.unshift(line.hash);
break}}hashes.unshift(line[i].hash)}return hashes},moveCount:function(){return HISTORY.length},startingMoveNumber:function(){return STARTING_MOVE_NUMBER;
},completeFen:completeFen,createVariation:createVariation,selectLine:selectLine,hash:function(){var hash=getCurrentHash();if(VARIANT===VARIANTS.Bughouse&&!CHESS.isDependent){
return[hash,CHESS.siblingGame.hash()]}return hash},hashing:function(enabled){HASHING=enabled;if(VARIANT===VARIANTS.Bughouse&&!CHESS.isDependent){
CHESS.siblingGame.hashing(HASHING)}},hand:function(){if(IS_DROP){return handToString(CHESS._hand[WHITE],true)+handToString(CHESS._hand[BLACK]);
}},checks:function(){if(VARIANT===VARIANTS["3-check"]){return[CHECKS[WHITE],CHECKS[BLACK]]}},tokenizePgn:tokenizePgn,_hand:[],_history:function(newHistory){
if(newHistory){HISTORY=newHistory;CUR_LINE=HISTORY.id}return HISTORY},_lines:function(){return LINES},_hashPosition:hashPosition,
_board:function(){return BOARD}};if(!INIT_FEN){reset()}else{load(INIT_FEN,INIT_VARIANT)||reset()}return CHESS}Chess.fixSanMove=function(move,board,turn){
var to;var div;var match;if(/0|[?!+#]$|[18][QNRB]$|^P/.test(move)){return move.replace(/[?!+#]+$/,"").replace(/0/g,"O").replace(/([18])([QNRB])$/,"$1=$2").replace(/^P/,"");
}div=move.indexOf("=")>0?-4:-2;to=move.substr(div,2);turn=swapColor(turn);if(board[SQUARES[to]]&turn||/^[a-h]x?[a-h]/.test(move)){
if(move.indexOf("x")===-1){return move.slice(0,div)+"x"+move.substr(div)}}else if(move.indexOf("x")>-1){return move.replace("x","");
}if(match=move.match(/^([KQNRB]?)([a-h][1-8]?|[1-8])(x?[a-h][1-8])=?(.?)$/)){if(board[SQUARES[match[2]]]){return{from:match[2],to:to,
promotion:match[4].toLowerCase()}}return match[1]+match[3]+match[4]}};Chess.fixObjMove=function(move,board,turn){if(board[SQUARES[move.from]]===(KING|turn)&&move.to&&move.from[1]===move.to[1]){
if(move.from<move.to){return"O-O"}if(move.from>move.to){return"O-O-O"}}};return Chess}();var ENGINE_MANAGER=function(JCE){var DEFAULT_POSITION="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
var simpleCommands=["bench","d","eval","flip","isready","perft","ponderhit","stop","uci","ucinewgame"];var complexCommands=[{cmd:"position",
args:["fen","startpos","moves","continuation"]},{cmd:"go",args:["binc","btime","confidence","depth","infinite","mate","mindepth","mintime","maxdepth","maxtime","movestogo","movetime","ponder","searchmoves","shallow","winc","wtime"]
}];var arrayParams=["moves","searchmoves"];var boolParams=["ponder","infinite","startpos"];var evalRegex=/Total Evaluation[\s\S]+\n$/i;
function createWebWorker(path,options,engine){var webWorker=new Worker(path||"stockfish.js");var worker={terminate:terminate,postMessage:postMessage,
addEventListener:addEventListener};function postMessage(message){webWorker.postMessage(message)}function terminate(){webWorker.terminate();
}function requeue(queue){if(queue.length){queue.forEach(function(cmd){cmd.message="";postMessage(cmd.cmd)})}}webWorker.onmessage=function(message){
worker.onmessage(message)};webWorker.onerror=function(e){if(options.pathToNonWasmEngine&&options.pathToNonWasmEngine!==path){if(e.preventDefault){
e.preventDefault()}try{webWorker.terminate()}catch(e){}webWorker=createWebWorker(options.pathToNonWasmEngine,options,engine);webWorker.onmessage=function(message){
worker.onmessage(message)};requeue(engine._activeCommands());return false}if(options.onError){return options.onError(e)}};function addEventListener(type,listner){
worker["on"+type]=listner}return worker}function createWorker(options,engine){var path=options.pathToNonWasmEngine&&typeof WebAssembly==="undefined"?options.pathToNonWasmEngine:options.enginePath||options.pathToEngineWorker;
if(options.pathToWasmEngine){path+="#"+options.pathToWasmEngine}if(typeof Worker!=="undefined"){return createWebWorker(path,options,engine);
}}function parseSearchLine(line){var parts;var len;var i;var json={};var bools=["lowerbound","upperbound","score"];var nums=["depth","seldepth","time","nodes","multipv","cp","mate","currmovenumber","hashfull","nps","tbhits","sbhits","cpuload"];
var props=["depth","seldepth","time","nodes","pv","multipv","score","cp","mate","lowerbound","upperbound","currmove","currmovenumber","hashfull","nps","tbhits","sbhits","cpuload","string","refutation","currline","bestmove","ponder","baseTurn","pvSan","bestmoveSan","ponderSan","bmc"];
var openEnded=["pv","pvSan","string","refutation","currline"];var isOpenEnded;var curProp;parts=line.split(" ");len=parts.length;if(parts[0]==="info"){
i=1}else{i=0}json.mtype=parts[0];for(;i<len;i+=1){if(parts[i]){if(!curProp||isOpenEnded&&props.indexOf(parts[i])>-1){curProp=parts[i];
if(bools.indexOf(curProp)>-1){json[curProp]=true;curProp=null}else{isOpenEnded=openEnded.indexOf(curProp)>-1||props.indexOf(curProp)===-1;
}}else{if(nums.indexOf(curProp)>-1){parts[i]=Number(parts[i])}if(isOpenEnded){if(typeof json[curProp]==="undefined"){json[curProp]=[];
}json[curProp].push(parts[i])}else{json[curProp]=parts[i];curProp=null}}}}if(json.bestmove==="(none)"){json.bestmove=undefined;json.bestmoveSan=undefined;
}if(json.ponder==="(none)"){json.ponder=undefined;json.ponderSan=undefined}return json}function getFirstWord(line){var spaceIndex=line.indexOf(" ");
if(spaceIndex===-1){return line}return line.substr(0,spaceIndex)}function convertStockfishVariantFen(fen){return(fen+"").replace(/^([^\/]+)((?:\/[^\/]+){7})\/([qrbnp]*)/i,"$1$2[$3]").replace(/( \d+ \d+) \+([0-3])\+([0-3])/,function(m,a,b,c){
return" "+(3-b)+"+"+(3-c)+a})}function convertStandardVariantFen(fen){return(fen+"").replace(/\[([qrbnp]*)\]/i,"/$1").replace(/([0-3])\+([0-3]) (\d+ \d+)/,function(m,a,b,c){
return c+" +"+(3-a)+"+"+(3-b)})}function loadEngine(options,cbLoadEngine){var engine={};var worker=createWorker(options,engine);var queue=[];
var getBestMoveTimer;var bestMoveQueue=[];var currentVariant;function determineQueueNum(line,queue){var cmdType;var firstWord=getFirstWord(line);
var cmdFirstWord;var i;var len;if(queue[0].cmd!=="bench"&&queue[0].cmd!=="perft"){if(firstWord==="uciok"||firstWord==="option"){cmdType="uci";
}else if(firstWord==="readyok"||firstWord==="ready"){cmdType="isready"}else if(firstWord==="json"){cmdType="fetch"}else if(firstWord==="bestmove"||firstWord==="info"){
cmdType="go"}else{cmdType="other"}len=queue.length;for(i=0;i<len;i+=1){cmdFirstWord=getFirstWord(queue[i].cmd);if(cmdFirstWord===cmdType||cmdType==="other"&&(cmdFirstWord==="d"||cmdFirstWord==="eval")){
return i}}}return 0}function onmessage(e){var line=typeof e==="string"?e:e.data;var done;var queueNum=0;var myQueue;var split;var i;
if(!engine){return}if(line.indexOf("\n")>-1){split=line.split("\n");for(i=0;i<split.length;i+=1){onmessage(split[i])}return}if(JCE.log){
console.log("debug (onmessage): "+line)}if(engine.stream){engine.stream(line)}if(!queue.length||line.indexOf("No such option")===0||line.indexOf("id ")===0||line.indexOf("Stockfish")===0||line.indexOf("info string variant")===0){
return}queueNum=determineQueueNum(line,queue);myQueue=queue[queueNum];if(!myQueue){return}if(myQueue.stream&&!myQueue.discard){myQueue.stream(line);
}if(typeof myQueue.message==="undefined"){myQueue.message=""}else if(myQueue.message!==""){myQueue.message+="\n"}myQueue.message+=line;
if(getFirstWord(line)==="uciok"){done=true}else if(getFirstWord(line)==="readyok"||getFirstWord(line)==="ready"){done=true;engine.ready=true;
}else if((line.indexOf("bestmove")===0||getFirstWord(line)==="bestmove")&&myQueue.cmd!=="bench"){done=true;myQueue.message=line}else if(myQueue.cmd==="d"){
if(line.indexOf("Legal uci moves")===0||line.indexOf("Key is")===0){myQueue.done=true;done=true}}else if(myQueue.cmd==="fetch json"){
try{myQueue.message=JSON.parse(myQueue.message.replace(/^json /gm,"").replace(/\n/g,""));done=true}catch(e){}}else if(myQueue.cmd==="eval"){
if(evalRegex.test(myQueue.message)){done=true}}else if(line.indexOf("pawn key")===0){done=true}else if(line.indexOf("Nodes/second")===0){
done=true}else if(line.indexOf("Unknown command")===0){done=true}if(done){queue.splice(queueNum,1);if(myQueue.cb&&!myQueue.discard){
myQueue.cb(myQueue.message)}else if(myQueue.ondiscard){myQueue.ondiscard()}}}engine.send=function(cmd,cb,stream){var noReply;cmd=String(cmd).trim();
if(JCE.log){console.log("debug (send): "+cmd)}if(cmd!=="ucinewgame"&&cmd!=="flip"&&cmd!=="stop"&&cmd!=="ponderhit"&&cmd.indexOf("position")!==0&&cmd.indexOf("setoption")!==0){
queue[queue.length]={cmd:cmd,cb:cb,stream:stream}}else{noReply=true}if(worker){worker.postMessage(cmd);if(noReply&&cb){setTimeout(cb,0);
}}};engine._activeCommands=function(){return queue};engine.quit=function(){if(worker&&worker.terminate){worker.terminate();worker=null;
engine.ready=undefined}clearTimeout(getBestMoveTimer)};simpleCommands.forEach(function oneach(cmd){engine[cmd]=function makeSCmd(cb,stream){
engine.send(cmd,cb,stream)}});complexCommands.forEach(function oneach(complex){engine[complex.cmd]=function makeCCmd(args,cb,stream){
var cmdArr=[complex.cmd];if(currentVariant&&args.fen){args.fen=convertStockfishVariantFen(args.fen)}complex.args.forEach(function oneach(arg){
if(args[arg]||args[arg]===0){if(arrayParams.indexOf(arg)>-1){if(!args[arg]||!args[arg].length){return}if(Array.isArray(args[arg])){
args[arg]=args[arg].join(" ")}}cmdArr.push(arg);if(boolParams.indexOf(arg)===-1){cmdArr.push(args[arg])}}});engine.send(cmdArr.join(" "),cb,stream);
}});engine.setoption=function(name,value){engine.send("setoption name "+name+" value "+value)};engine.setVariant=function(variant){
var normVar;if(variant!==currentVariant){normVar=String(variant).toLowerCase().replace(/ |-/g,"");if(!variant||normVar==="chess"){
normVar=undefined;engine.setoption("UCI_Variant","chess");engine.setoption("UCI_Chess960","false")}else if(normVar==="chess960"){
engine.setoption("UCI_Variant","chess");engine.setoption("UCI_Chess960","true")}else{if(normVar==="threecheck"){normVar="3check"}
engine.setoption("UCI_Variant",normVar);engine.setoption("UCI_Chess960","false")}currentVariant=normVar}};engine.loadBook=function(path,cb){
BOOK_READER.loadBook(path,function onload(err,book){engine.book=book;engine.pathToBook=path;engine.bookLoaded=true;if(err){console.error("Error loading opening book.");
console.error(err);engine.pathToBook=null;engine.bookLoaded=false}cb()})};function getBookMove(args){var move;var legalMoves;var bookLegalMove;
var startingFen;if(args.moves&&args.moves.length){startingFen=JCE.getFenFromMoves(args.fen,args.moves,args.variant)}else{startingFen=args.fen;
}move=engine.book.pick({fen:startingFen,type:typeof args.bookPick!=="undefined"?args.bookPick:"random",chess960:args.variant==="Chess960"
});if(move){legalMoves=JCE.getLegalMoves(startingFen,args.variant);legalMoves.some(function(legalMove){if(legalMove.from+legalMove.to+(legalMove.promotion||"")===move){
bookLegalMove=legalMove;return true}});if(bookLegalMove){return{moveSan:bookLegalMove.san,moveLan:move,move:{from:bookLegalMove.from,
to:bookLegalMove.to,promotion:bookLegalMove.promotion||null},baseTurn:startingFen.split(" ")[1],pv:[{moveSan:bookLegalMove.san,moveLan:move
}],depth:null,score:null,mateIn:null,isBookMove:true}}}}function bestMoveSearch(){var curDepth=1;var pvs=[];var sanpvs=[];var cp;var mate;
var mateIn=null;var args=bestMoveQueue[0].args;var cb=bestMoveQueue[0].cb;var stream=bestMoveQueue[0].stream;var timeout=args.timeout;
var baseTurn;var adjustScore=1;var game;var maxNormDepth=14;args.timeout=undefined;bestMoveQueue[0].started=true;function convertpv(which){
var arr=[];var thisSanPv=sanpvs[which]||createSanPv(pvs[which]);pvs[which].forEach(function oneach(moveLan,i){arr.push({moveSan:thisSanPv[i],
moveLan:moveLan})});return arr}function getpv(firstLan,firstSan,secondLan,secondSan){var i;for(i=pvs.length-1;i>=0;i-=1){if(pvs[i][0]===firstLan){
return convertpv(i)}}if(secondLan){return[{moveSan:firstSan,moveLan:firstLan},{moveSan:secondSan,moveLan:secondLan}]}if(firstSan){
return[{moveSan:firstSan,moveLan:firstLan}]}return[]}function normalize(data){var percent=.03*Math.pow(32,data.depth/maxNormDepth);
data.cp=loadEngine._previousCP+(data.cp-loadEngine._previousCP)*percent}function convertScore(data){if(data.mate===0){data.mateIn=0;
data.cp=-31800*adjustScore}else{data.mateIn=Number(data.mate*adjustScore)||null;if(typeof data.mateIn==="number"&&!isNaN(data.mateIn)&&typeof data.cp!=="number"){
data.cp=31800*adjustScore*(data.mate/Math.abs(data.mate))}else{data.cp*=adjustScore;if(Math.abs(data.cp)===9){data.cp=0}if(args.normalize&&data.depth<=maxNormDepth&&typeof loadEngine._previousCP==="number"&&data.multipv===1){
normalize(data)}}}data.score=data.cp/100}function returnBestMove(line){var data=parseSearchLine(line);addBestMoveProps(data);if(curDepth>maxNormDepth&&cp<5e3&&cp>-5e3){
loadEngine._previousCP=cp}data.pv=getpv(data.moveLan,data.moveSan);if(data.pv.length===1&&data.ponder){data.pv=getpv(data.moveLan,data.moveSan,data.ponder,data.ponderSan);
}if(cb){try{cb(data)}catch(e){console.error(e)}}bestMoveQueue.shift();if(bestMoveQueue.length>0){bestMoveSearch()}clearTimeout(getBestMoveTimer);
}function addBestMoveProps(data){var tmpMove;data.baseTurn=baseTurn;data.cp=cp;data.score=cp/100;data.mate=mate;data.mateIn=mateIn;
data.depth=curDepth;data.moveLan=data.bestmove;if(data.moveLan){data.move=JCE.uciToObj(data.moveLan)[0];tmpMove=game.move(data.move);
if(!tmpMove){throw new Error("Bad moveLan in line: "+data.moveLan+" at "+game.fen()+"\ndata: "+JSON.stringify(data)+"\nargs: "+JSON.stringify(args));
}data.moveSan=data.bestmoveSan=tmpMove.san;if(data.ponder&&data.ponder!=="(none)"){tmpMove=game.move(JCE.uciToObj(data.ponder)[0]);
if(!tmpMove){throw new Error("Bad ponder in line: "+data.ponder+" at "+game.fen()+"\ndata: "+JSON.stringify(data)+"\nargs: "+JSON.stringify(args));
}data.ponderSan=tmpMove.san;game.undo(true)}game.undo(true)}}function createSanPv(pv){var i;var len=pv.length;var pvSan=[];var tmpMove;
for(i=0;i<len;++i){tmpMove=game.move(JCE.uciToObj(pv[i])[0]);if(!tmpMove){throw new Error("Bad pv in line: "+pv[i]+" ("+i+") at "+game.fen()+"\npv: "+JSON.stringify(pv)+"\nargs: "+JSON.stringify(args));
}pvSan.push(tmpMove.san)}for(i=0;i<len;++i){game.undo(true)}return pvSan}function streamInfo(line){var data=parseSearchLine(line);
if(data.score){data.baseTurn=baseTurn;convertScore(data);if(data.multipv===1||data.depth===0){cp=data.cp;mate=data.mate;mateIn=data.mateIn;
}}if(data.pv&&stream){data.pvSan=createSanPv(data.pv)}if(data.pv&&!(data.lowerbound||data.upperbound)){pvs.push(data.pv);if(stream){
sanpvs.push(data.pvSan)}}if(data.depth>curDepth){curDepth=data.depth}else if(data.mtype==="bestmove"){addBestMoveProps(data)}if(stream&&!(data.mateIn===0&&data.pv)){
stream(data)}createTimeout()}function createTimeout(){if(timeout){clearTimeout(getBestMoveTimer);getBestMoveTimer=setTimeout(function(){
engine.stop();if(cb){cb();cb=undefined}},timeout)}}if(args.difficulty>=0&&args.difficulty<20){engine.setoption("Skill Level",args.difficulty);
if(args.maximumError>=0&&args.maximumError<=4999){engine.setoption("Skill Level Maximum Error",args.maximumError)}if(args.errorProbability>=1&&args.errorProbability<=128){
engine.setoption("Skill Level Probability",args.errorProbability)}}else{engine.setoption("Skill Level",20)}if(args.contempt!==undefined){
engine.setoption("Contempt",args.contempt)}else{engine.setoption("Contempt","0")}if(args.multiPv>1){engine.setoption("MultiPV",args.multiPv);
}else{engine.setoption("MultiPV",1)}if(!args.movetime&&(!args.wtime||!args.btime)&&!args.depth){args.btime=args.btime||72e3;args.wtime=args.wtime||72e3;
}if((args.startpos||!args.fen)&&!args.moves&&!args.variant){baseTurn="w";game=JCE.createGame({disableHashing:true})}else{game=JCE.createGame({
fen:args.fen?convertStandardVariantFen(args.fen):DEFAULT_POSITION,moves:args.moves,variant:args.variant,disableHashing:true});if(game.turn()===game.WHITE){
baseTurn="w"}else{baseTurn="b";adjustScore=-1}}engine.setVariant(args.variant);engine.position(args);engine.go(args,returnBestMove,streamInfo);
createTimeout()}function queueBestMoveSearch(args,cb,stream){bestMoveQueue.push({args:args,cb:cb,stream:stream});if(bestMoveQueue.length===1){
bestMoveSearch()}}engine.getBestMove=function(args,cb,stream){var move;args=args||{};args.fen=args.fen||args.baseFen;if(args.is960){
args.variant="Chess960"}if(engine.bookLoaded&&args.useBook){move=getBookMove(args);if(move){return setTimeout(function(){move.mtype="bestmove";
cb(move)},0)}}queueBestMoveSearch(args,cb,stream)};engine.stopAll=function(cb){var i;var len=queue.length;var discardCount=0;function ondiscard(){
discardCount-=1;if(discardCount===0){cb()}}bestMoveQueue=[];for(i=0;i<len;i+=1){if(JCE.log){console.log("debug (stop_moves): "+i,getFirstWord(queue[i].cmd));
}if(getFirstWord(queue[i].cmd)==="go"&&!queue[i].discard){engine.stop();queue[i].discard=true;if(cb){discardCount+=1;queue[i].ondiscard=ondiscard;
}}}if(cb&&!discardCount){engine.isready(cb)}};engine.restartEngine=function(cb){engine.stopAll();engine.quit();queue=[];bestMoveQueue=[];
if(engine.bookLoaded&&!options.book){options=JSON.parse(JSON.stringify(options));options.book=engine.book}return loadEngine(options,cb);
};engine.stopFast=function(cb,maxTime){var timer;engine.stopAll(function(){clearTimeout(timer);cb(engine)});timer=setTimeout(function(){
engine.restartEngine(cb)},maxTime||5e3)};function startUp(){engine.isready(function onstart(){if(options.settings){engine.uci(function onuci(){
Object.keys(options.settings).forEach(function oneach(key){engine.setoption(key,options.settings[key])});if(cbLoadEngine){cbLoadEngine(engine);
}})}else if(cbLoadEngine){cbLoadEngine(engine)}})}function addListener(){worker.addEventListener("message",onmessage,false)}if(typeof Worker==="undefined"){
return false}addListener();if(options.book){engine.book=options.book;engine.bookLoaded=true;engine.pathToBook=options.pathToBook}
if(!engine.book&&options.pathToBook){engine.loadBook(options.pathToBook,startUp)}else{setTimeout(startUp,0)}engine.getFenFromMoves=JCE.getFenFromMoves;
engine.getLegalMoves=JCE.getLegalMoves;engine.getPositionInfo=JCE.getPositionInfo;engine.isFenValid=JCE.isFenValid;engine.ready=false;
return engine}return loadEngine};var JCE=function(){var chessJS=Chess();var loadEngine;var DEFAULT_POSITION="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
var TYPE_MASK=252;var PIECE_MASK=255;var JCE_PIECE_MAP={4:"p",5:"P",6:"p",8:"n",9:"N",10:"n",16:"b",17:"B",18:"b",32:"r",33:"R",34:"r",
64:"q",65:"Q",66:"q",128:"k",129:"K",130:"k"};var JCE_DROP_PIECE_MAP="pnbrq";var WAS_PROMOTED=512;var tcnList="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!?{~}(^)[_]@#$,./&-*++=";
var tcnPieces="qnrbkp";function decodeTCN(tcn){var pos;var len=tcn.length;var moves=[];var fromVal;var toVal;var move;for(pos=0;pos<len;pos+=2){
move={};fromVal=tcnList.indexOf(tcn[pos]);toVal=tcnList.indexOf(tcn[pos+1]);if(toVal>63){move.promotion=tcnPieces[Math.floor((toVal-64)/3)];
toVal=fromVal+(fromVal<16?-8:8)+(toVal-1)%3-1}if(fromVal>75){move.drop=tcnPieces[fromVal-79]}else{move.from=tcnList[fromVal%8]+(Math.floor(fromVal/8)+1);
}move.to=tcnList[toVal%8]+(Math.floor(toVal/8)+1);moves.push(move)}return moves}function encodeTCN(moves){var pos;var len;var tcn="";
var fromVal;var toVal;if(!Array.isArray(moves)){moves=[moves]}len=moves.length;for(pos=0;pos<len;pos+=1){if(moves[pos].drop){fromVal=79+tcnPieces.indexOf(moves[pos].drop);
}else{fromVal=tcnList.indexOf(moves[pos].from[0])+(moves[pos].from[1]-1)*8}toVal=tcnList.indexOf(moves[pos].to[0])+(moves[pos].to[1]-1)*8;
if(moves[pos].promotion){toVal=tcnPieces.indexOf(moves[pos].promotion)*3+64+(toVal<fromVal?9+toVal-fromVal:toVal-fromVal-7)}tcn+=tcnList[fromVal]+tcnList[toVal];
}return tcn}function uciToObj(uci){var moves=uci.split(" ");var i;var len=moves.length;var objs=[];var move;if(uci){for(i=0;i<len;++i){
move=moves[i];if(move.length===4){if(move[1]==="@"){objs.push({drop:move[0].toLowerCase(),to:move.substr(2,2)})}else{objs.push({from:move.substr(0,2),
to:move.substr(2,2)})}}else{objs.push({from:move.substr(0,2),to:move.substr(2,2),promotion:move[4]})}}}return objs}function isSameMove(move1,move2){
return move1.san===move2.san||move1.from==move2.from&&move1.to==move2.to&&move1.promotion==move2.promotion&&move1.drop==move2.drop;
}function makePremove(chess,color,move){var variant=chess.header().Variant;var premoves=getPremoves(chess.fen(),color,variant);var i;
var premove;var foundMove;var piece;var rook;if(premoves){for(i=premoves.length-1;i>=0;--i){premove=premoves[i];if(isSameMove(premove,move)){
foundMove=true;break}}if(foundMove){if(premove.drop){chess.put({type:premove.drop,color:color},premove.to,true)}else{piece=chess.remove(premove.from,true);
if(premove.flags===chessJS.FLAGS.KSIDE_CASTLE){rook=chess.remove(variant==="Chess960"?premove.to:"h"+premove.from[1],true);chess.put(piece,"g"+premove.from[1],true);
chess.put(rook,"f"+premove.from[1],true)}else if(premove.flags===chessJS.FLAGS.QSIDE_CASTLE){rook=chess.remove(variant==="Chess960"?premove.to:"a"+premove.from[1],true);
chess.put(piece,"c"+premove.from[1],true);chess.put(rook,"d"+premove.from[1],true)}else{if(premove.promotion){piece.type=premove.promotion;
piece.promoted=true}chess.put(piece,premove.to,true)}}return premove}}if(move.from&&(move=Chess.fixObjMove(move,chess._board(),color))){
return makePremove(chess,color,{san:move})}}function getPieces(chess,asObj){var pieces=asObj?{}:[];var board=chess._board();var i;
var piece;var sq;if(asObj){for(i=112;i>=0;++i){if(i&136){i-=24}if(piece=board[i]){sq=tcnList[i&7]+(8-(i>>4));pieces[sq]={type:JCE_PIECE_MAP[piece&TYPE_MASK],
color:piece&3,promoted:(piece&WAS_PROMOTED)!==0,square:sq}}}}else{for(i=112;i>=0;++i){if(i&136){i-=24}if(piece=board[i]){pieces.push({
type:JCE_PIECE_MAP[piece&TYPE_MASK],color:piece&3,promoted:(piece&WAS_PROMOTED)!==0,rank:8-(i>>4),file:(i&7)+1})}}}return pieces}
function predict(whiteELO,blackELO){var w=Math.min(Math.max(.20773843*Math.atan(2.49085889*whiteELO/100-2.47841945*blackELO/100)+.02262979*whiteELO/100-.02256839*blackELO/100+.52239679,0),1);
var b=Math.min(Math.max(-.20720905*Math.atan(2.49626837*whiteELO/100-2.48220286*blackELO/100)+-.02352551*whiteELO/100+.02172627*blackELO/100+.49443923,0),1);
var d=Math.min(Math.max(Math.exp(.037043456*whiteELO/100+.178106427*blackELO/100+-8.069742932)+.004823544*Math.exp(-1.364136591*Math.pow(whiteELO/100-blackELO/100,2))+-.001625539,0),1);
var sum=w+b+d;return{w:w/sum,b:b/sum,d:d/sum}}function getPositionDetails(options,move){var chess;var finalFenParts;var moveDetails;
var fen;options=options||{};options.disableHashing=true;chess=createGame(options);if(!chess){return null}if(move){if(options.premove){
moveDetails=makePremove(chess,options.color,move);if(!moveDetails){return null}}else{moveDetails=chess.move(move);if(!moveDetails){
return null}if(!chess.extended){normalizeMoveObj(moveDetails)}}}fen=chess.fen();if(options.premove){options.check=false;options.kings=false;
}if(!options.skipValidation&&!chess.isPositionValid(options)){return null}finalFenParts=fen.split(" ");return{fen:fen,pieces:getPieces(chess),
sideToMove:chess.turn(),castling:finalFenParts[2],epSquare:finalFenParts[3]==="-"?null:finalFenParts[3],halfMoves:+finalFenParts[4],
moveNumber:+finalFenParts[5],move:moveDetails,hand:chess.hand(),checks:chess.checks()}}function gameFingerprints(options){var chess=createGame(options);
var history;var movesHash;var i;var historyPos;var len;var hashes;var moves=[""];var fingerprints=[];var lanMove;var headers;var suffix;
if(!chess){return false}headers=chess.header();suffix=headers.Variant||"";hashes=chess.hashes();history=typeof chess.origHistory==="function"?chess.origHistory(true):chess.history(true);
len=hashes.length;movesHash=[hashes[0][0],hashes[0][1]];fingerprints.push(BOOK_READER.to64BitHex(movesHash)+suffix);hashes[0]=BOOK_READER.to64BitHex(hashes[0]);
for(i=1;i<len;++i){movesHash[0]=(movesHash[0]^hashes[i][0]*(i+58465))>>>0;movesHash[1]=(movesHash[1]^hashes[i][1]*(i+984))>>>0;hashes[i]=BOOK_READER.to64BitHex(hashes[i]);
fingerprints.push(BOOK_READER.to64BitHex(movesHash)+suffix);historyPos=i-1;normalizeMoveObj(history[historyPos]);lanMove=(history[historyPos].from?history[historyPos].from:history[historyPos].drop.toUpperCase()+"@")+history[historyPos].to+(history[historyPos].promotion||"");
if(historyPos){lanMove=moves[historyPos]+" "+lanMove}moves.push(lanMove)}return{startingFen:headers.FEN||DEFAULT_POSITION,hashes:hashes,
fingerprints:fingerprints,moves:moves,variant:headers.Variant}}function makeMoves(chess,moves,options,timestamps){var i;var j;var len;
var linesLen;var board;var moveToPlay;var history;var lastHistory;var moveTime;var curLine;var res;options=options||{};if(typeof moves==="string"){
moves=moves.trim().split(" ")}len=moves.length;for(i=0;i<len;i+=1){if(moves[i].board==="b"||moves[i].board==="B"){board=chess.siblingGame;
}else{board=chess}if(typeof moves[i]==="string"){moveToPlay=uciToObj(moves[i])[0]}else if(moves[i].san){moveToPlay=moves[i].san}else{
moveToPlay=moves[i]}if(!board.move(moveToPlay)){if(options.autoPromote){if(options.autoPromote===true){moveToPlay.promotion="q"}else{
moveToPlay.promotion=options.autoPromote}if(!board.move(moveToPlay)){if(options.skipBadLines){break}return false}}else{if(options.skipBadLines){
break}return false}}history=board._history();lastHistory=history[history.length-1];if(timestamps){moveTime=parseInt(timestamps[i],10);
}if(typeof moveTime!=="number"||isNaN(moveTime)){moveTime=parseInt(moves[i].time,10)}if(typeof moveTime==="number"&&!isNaN(moveTime)){
lastHistory.time=moveTime;moveTime=undefined}if(moves[i].firstComment){history.initComment=moves[i].firstComment}if(moves[i].comment){
lastHistory.comment=moves[i].comment}if(moves[i].annotation){lastHistory.annotation=moves[i].annotation}if(moves[i].additionalAnnotation){
lastHistory.additionalAnnotation=moves[i].additionalAnnotation}if(moves[i].commands){lastHistory.commands=moves[i].commands}if(moves[i].lines){
linesLen=moves[i].lines.length;for(j=0;j<linesLen;++j){curLine=chess._history().id;chess.createVariation();res=makeMoves(chess,moves[i].lines[j],options);
if(!res&&!options.skipBadLines){return false}chess.selectLine(curLine)}}}return true}function playBughouseTCN(chess,tcns,timestamps){
var moves=[decodeTCN(tcns[0]),decodeTCN(tcns[1])];var pos=[0,0];var side=[0,0];var countDown=moves[0].length+moves[1].length;var estTime=Math.max(timestamps[0][0]|0,timestamps[0][1]|0,timestamps[1][0]|0,timestamps[1][1]|0);
var timeOnClock;var elapsed=[0,0];var times=[0,0];var which;var board;estTime+=600-estTime%600;timeOnClock=[[estTime,estTime],[estTime,estTime]];
while(countDown--){times[0]=elapsed[0]+timeOnClock[0][side[0]]-timestamps[0][pos[0]]||0;times[1]=elapsed[1]+timeOnClock[1][side[1]]-timestamps[1][pos[1]]||0;
which=times[0]<=times[1]?0:1;if(!moves[which][pos[which]]){which^=1}board=which?chess.siblingGame:chess;if(!board.move(moves[which][pos[which]])||countDown&&board.inCheckmate()&&board.undo(true)){
which^=1;board=which?chess.siblingGame:chess;if(!board.move(moves[which][pos[which]])){return false}}board._history()[pos[which]].time=timestamps[which][pos[which]];
timeOnClock[which][side[which]]=timestamps[which][pos[which]];elapsed[which]=times[which];side[which]^=1;++pos[which]}return true;
}function extendChess(chess){var orig;var moveId=-1;var lineId=0;var fixedSelectedLine;function descendsFromMove(lines,fromLineId,toLineId){
var currentLine=lines[fromLineId];var parentId;while(typeof(parentId=currentLine.parentId)==="number"){if(parentId===toLineId){return currentLine.atMoveNode;
}currentLine=lines[parentId]}return false}function fixContComment(move){var line=chess._lines()[move.ids.line];if(line.initComment){
move.comment=(line.initComment+" "+(move.comment||"")).trim();line.initComment=""}return true}if(!chess.extended){chess.extended=true;
orig={header:chess.header,load:chess.load,loadPgn:chess.loadPgn,createVariation:chess.createVariation,undo:chess.undo,pgn:chess.pgn
};chess._move=chess.move;chess.premoves=[];chess.undo=function(){return chess.deletePosition(moveId,lineId)};chess.isLegalMove=function(move){
return!!chess._move(move)&&orig.undo(true)};chess.premove=function(move,color){var moveInfo;var len=chess.premoves.length;var gameCopy=Chess();
if(len){gameCopy.load(chess.premoves[len-1].fen,chess.header().Variant)}else{gameCopy.load(chess.fen(),chess.header().Variant)}moveInfo=makePremove(gameCopy,color,move);
if(!moveInfo){return null}chess.premoves.push({move:moveInfo,pieces:getPieces(gameCopy),fen:gameCopy.fen()});return moveInfo};chess.getPieces=function(asObj){
return getPieces(chess,asObj)};chess.origHistory=chess.history;chess.history=function(options,noParentLines){var moveHistory=[];var verboseMove;
var line=chess._history();var i=line.length;var lines=chess._lines();var prop;var prop2;if(typeof options==="boolean"){options={verbose:options
}}options=options||{};if(noParentLines){options.noParentLines=noParentLines}if(options.toCurrent){i=chess.ids().move+1}for(;;){if(--i===-1){
if(line.id&&!options.noParentLines){i=line.atMoveNode;line=lines[line.parentId];continue}else{break}}if(options.verbose){verboseMove={};
for(prop in line[i]){if(line[i][prop]&&typeof line[i][prop]==="object"){verboseMove[prop]=line[i][prop].constructor===Array?[]:{};
for(prop2 in line[i][prop]){verboseMove[prop][prop2]=line[i][prop][prop2]}}else{verboseMove[prop]=line[i][prop]}}moveHistory.unshift(verboseMove);
}else{moveHistory.unshift(line[i].san)}}return moveHistory};chess._getPos=function(whichMoveId,whichLineId){var history;var lines;
if(typeof whichMoveId!=="number"){whichMoveId=moveId}if(typeof whichLineId!=="number"){whichLineId=lineId}lines=chess._lines();history=lines[whichLineId];
if(whichMoveId>=0){return history[whichMoveId]}if(history.id){if(history.atMoveNode){return lines[history.parentId][history.atMoveNode-1];
}return chess._getPos(history.atMoveNode-1,history.parentId)}return{fen:orig.header().FEN||DEFAULT_POSITION,hash:history.hash,initial:true
}};chess.move=function(move,followContinuations){var prettyMove;var history=chess._history();var historyMove;var bughouseBeforeFen;
var previous;if(move&&(typeof move==="string"||move.to&&(move.from||move.drop))){if(lineId===history.id&&moveId<history.length-1||followContinuations){
if(chess.moveForward(followContinuations,move)){return true}if(moveId<history.length-1){chess.selectPosition(moveId+1);chess.createVariation();
history=chess._history()}}if(chess.siblingGame){if(chess.isDependent){bughouseBeforeFen=chess.siblingGame.fen()}else{bughouseBeforeFen=chess.fen();
}}prettyMove=chess._move(move);if(prettyMove){normalizeMoveObj(prettyMove);lineId=history.id;moveId=history.length-1;historyMove=history[moveId];
previous=chess._getPos(moveId-1);if(chess.siblingGame){if(chess.isDependent){historyMove.fen=chess.siblingGame.fen()}else{historyMove.fen=chess.fen();
}historyMove.beforeFen=bughouseBeforeFen}else{historyMove.fen=chess.fen();historyMove.beforeFen=previous.fen}if(previous.initial){
historyMove.moveNumber=0;historyMove.previous=null}else{historyMove.moveNumber=previous.moveNumber+1;historyMove.previous=previous.ids;
if(previous.isContinuation){fixContComment(previous)}}if(lineId&&moveId===0&&chess._lines()[history.parentId][history.atMoveNode].move===historyMove.move){
historyMove.isContinuation=true}historyMove.flags=prettyMove.flags;historyMove.to=prettyMove.to;historyMove.from=prettyMove.from;historyMove.drop=prettyMove.drop;
historyMove.capturedStr=prettyMove.captured;historyMove.promotion=prettyMove.promotion;historyMove.piece=prettyMove.piece;if(prettyMove.promoted){
historyMove.promoted=true}if(prettyMove.capturedPromotedPawn){historyMove.capturedPromotedPawn=true}historyMove.ids={move:moveId,
line:lineId}}}return prettyMove};chess.header=chess.headers=function(data){var headers=orig.header(data);if(chess.siblingGame){extendChess(chess.siblingGame);
}return headers};chess.load=function(fen,variant,noReset,noValidate){var res=orig.load(fen,variant,noReset,noValidate);if(chess.siblingGame){
extendChess(chess.siblingGame)}if(res&&!noReset){moveId=-1;lineId=0}return res};chess.removeEmptyLines=function(){var lines=chess._lines();
var i;var needsReordering;for(i=lines.length-1;i>0;--i){if(!lines[i].length){lines[i]=undefined;needsReordering=true}}if(needsReordering){
chess.reorderLines()}};chess.loadPgn=function(pgn,index,options){var res=orig.loadPgn(pgn,index,options);var history=chess._history();
chess.removeEmptyLines();moveId=history.length-1;lineId=history.id;return res};chess.ids=function(){return{move:moveId,line:lineId
}};chess.selectLine=function(id){chess.selectPosition(null,id)};chess.moveBackward=function(){var previous;if(moveId<=1){if(lineId===0){
if(moveId===-1){return false}chess.selectPosition(moveId-1)}else{previous=chess._getPos(moveId-1,lineId);if(previous.isContinuation){
chess.selectPosition(chess._history().atMoveNode,chess._history().parentId)}else if(previous.initial){chess.selectPosition(-1,0)}else{
chess.selectPosition(previous.ids.move,previous.ids.line)}}}else{chess.selectPosition(moveId-1)}return true};chess.moveForward=function(followContinuations,move){
var lines=chess._lines();var next;var curMove;var childMove;var i;var len;var foundAlt;next=lines[lineId][moveId+1];if(typeof move==="string"){
move={san:move}}if(!next||move&&!isSameMove(move,next)){if(move&&next&&next.lines){len=next.lines.length;for(i=0;i<len;++i){childMove=lines[next.lines[i]][0];
if(childMove&&isSameMove(move,childMove)){next=childMove;foundAlt=true;break}}}if(!foundAlt&&followContinuations){curMove=lines[lineId][moveId];
if(curMove&&curMove.lines){len=curMove.lines.length;for(i=0;i<len;++i){childMove=lines[curMove.lines[i]][0];if(childMove&&childMove.isContinuation){
childMove=lines[curMove.lines[i]][1];if(childMove&&(!move||isSameMove(move,childMove))){next=childMove;foundAlt=true;break}}}}}if(!foundAlt){
if(move&&move.san&&(move=Chess.fixSanMove(move.san,chess._board(),chess.turn()))||move&&move.to&&move.from&&Math.abs(move.to.charCodeAt(0)-move.from.charCodeAt(0))>1&&(move=Chess.fixObjMove(move,chess._board(),chess.turn()))){
return chess.moveForward(followContinuations,move)}return false}}return chess.selectPosition(next.ids.move,next.ids.line)};chess.moveVariation=function(id,up){
var lines=chess._lines();var line=lines[id];var moveLines;var i;var other;if(line&&line.id){moveLines=lines[line.parentId][line.atMoveNode].lines;
for(i=moveLines.length-1;i>=0;--i){if(moveLines[i]===id){other=i-(up?1:-1);if(moveLines[other]){moveLines[i]=moveLines[other];moveLines[other]=id;
chess.reorderLines();return true}}}}return false};chess.promoteVariation=function(id,promoteTo){var lines=chess._lines();var line=lines[id];
var parentLine;var demotedLine;var parentId;var at;var i;var len;while(line&&line[0]&&line.id&&(promoteTo!==-1||line.parentId)){parentId=line.parentId;
parentLine=lines[parentId];at=line.atMoveNode;line[0].lines=parentLine[at].lines.concat(line[0].lines||[]);parentLine[at].lines=undefined;
len=parentLine.length-at;demotedLine=parentLine.splice(at,len);for(i=0;i<len;++i){demotedLine[i].ids.line=id;demotedLine[i].ids.move=i;
}demotedLine.id=id;demotedLine.parentId=parentId;demotedLine.atMoveNode=at;demotedLine.hash=line.hash;if(at===0){demotedLine.initComment=parentLine.initComment;
parentLine.initComment=line.initComment}else if(line.initComment){parentLine[at-1].comment=((parentLine[at-1].comment||"")+" "+line.initComment).trim();
}lines[id]=demotedLine;len=line.length;for(i=0;i<len;++i){line[i].ids.line=parentId;line[i].ids.move=i+at;parentLine.push(line[i]);
}demotedLine[0].isContinuation=!!line[0].isContinuation&&fixContComment(demotedLine[0]);parentLine[at].isContinuation=!at&&typeof parentLine.parentId==="number"&&lines[parentLine.parentId][parentLine.atMoveNode].move===parentLine[0].move&&fixContComment(parentLine[at]);
len=parentLine[at].lines.length;for(i=0;i<len;++i){lines[parentLine[at].lines[i]].atMoveNode=at;if(lines[parentLine[at].lines[i]][0]){
lines[parentLine[at].lines[i]][0].isContinuation=lines[parentLine[at].lines[i]][0].move===parentLine[at].move&&fixContComment(lines[parentLine[at].lines[i]][0]);
}}if(lineId===id){lineId=parentId;moveId+=at}else if(lineId===parentId&&moveId>=at){lineId=id;moveId-=at}if(promoteTo===1){break}else{
id=parentId;line=lines[id]}}if(parentLine!==undefined){chess._history(lines[lineId]);chess.reorderLines();if(!moveId&&lines[lineId][0].isContinuation){
chess.selectPosition(lines[lineId].atMoveNode,lines[lineId].parentId)}return true}return false};chess.reorderLines=function(checkingLineID,newLines){
var lines=chess._lines();var line;var i;var len;var move;var linesLen;var j;var childLineNum;var childLine;var thisCorrectLineNum;
var nextCorrectLineNum;if(!checkingLineID){checkingLineID=0;newLines=[lines[0]];thisCorrectLineNum=0;fixedSelectedLine=false}else{
thisCorrectLineNum=newLines.length-1}line=lines[checkingLineID];len=line.length;for(i=0;i<len;++i){move=line[i];move.ids.line=thisCorrectLineNum;
if(move.lines){linesLen=move.lines.length;for(j=0;j<linesLen;++j){childLineNum=move.lines[j];childLine=lines[childLineNum];if(childLine){
childLine.atMoveNode=i;nextCorrectLineNum=newLines.length;move.lines[j]=nextCorrectLineNum;childLine.parentId=thisCorrectLineNum;if(!fixedSelectedLine&&childLineNum===lineId){
fixedSelectedLine=true;lineId=nextCorrectLineNum}newLines.push(childLine);chess.reorderLines(childLineNum,newLines)}else{if(move.lines.length===1){
delete move.lines}else{move.lines.splice(j,1)}--j;--linesLen}}}}if(!checkingLineID){chess.saveLines(newLines,true)}};chess.createVariation=function(){
var history=chess._history();var lines=chess._lines();var res;var newLine;var curMove;var posInfo;if(moveId===history.length-1){res=orig.createVariation();
history=chess._history();moveId=history.length-1;lineId=history.id;return res}if(moveId===-1){return false}newLine=[];curMove=history[moveId];
newLine.parentId=history.id;newLine.id=lines.length;if(!curMove.lines){curMove.lines=[]}curMove.lines.push(newLine.id);posInfo=chess._getPos(moveId-1);
newLine.hash=posInfo.hash;newLine.atMoveNode=moveId;lines.push(newLine);return chess.selectPosition(-1,newLine.id)};chess.selectLineEnd=function(newLineId){
if(typeof newLineId!=="number"){newLineId=lineId}if(newLineId!==lineId||moveId<chess._history().length-1){return chess.selectPosition(null,newLineId,true);
}return false};chess.selectLineStart=function(){var line;var prevMove;if(!lineId){if(moveId===-1){return false}return chess.selectPosition(-1,0);
}if(moveId>1||moveId===1&&!chess._getPos(0).isContinuation){line=chess._history()}else{prevMove=chess._getPos(-1);line=chess._lines()[prevMove.ids?prevMove.ids.line:0];
}return chess.selectPosition(!line.id?-1:line[1]&&line[0].isContinuation?1:0,line.id)};chess.selectPosition=function(newMoveId,newLineId,force){
var lines=chess._lines();var history=chess._history();if(typeof newLineId==="number"&&(newLineId!==lineId||force)){if(newLineId<0||newLineId>=lines.length){
return false}history=lines[newLineId];if(typeof newMoveId!=="number"){newMoveId=history.length-1}else if(newMoveId<-1||newMoveId>=history.length){
return false}lineId=newLineId;chess._history(history);force=true}if(typeof newMoveId==="number"&&(newMoveId!==moveId||force)){if(newMoveId<-1||newMoveId>=history.length){
return false}orig.load(chess._getPos(newMoveId).fen,orig.header().Variant,true,true);moveId=newMoveId}return true};chess.resetToMainLine=function(){
var lines=chess._lines();chess.selectLineEnd(0);if(lines.length>1){lines.length=1;chess.reorderLines()}};chess.saveLines=function(newLines,skipPositionValidation){
var lines=chess._lines();var line;var len=newLines.length;var i;var origIds;if(newLines!==lines){lines.length=0}for(i=0;i<len;++i){
line=newLines[i];if(i&&typeof line.parentId!=="number"){return false}if(newLines!==lines){lines.push(line)}line.id=i}if(!skipPositionValidation){
origIds=chess.ids();chess.selectPosition(-1,0,true);chess.selectPosition(origIds.move,origIds.line)}return true};chess.deletePosition=function(whichMoveId,whichLineId){
var lines=chess._lines();var descentMove;var mustChange;if(!lines[whichLineId]||!lines[whichLineId][whichMoveId]&&(whichMoveId!==-1||whichLineId===0)){
return false}if(whichLineId){if(whichMoveId===0){whichMoveId=-1}else if(whichMoveId===1&&lines[whichLineId][0].isContinuation){whichMoveId=-1;
}}if(lineId>0&&whichLineId!==lineId){descentMove=descendsFromMove(lines,lineId,whichLineId);mustChange=descentMove!==false&&descentMove>=whichMoveId;
}else if(whichLineId===lineId&&whichMoveId<=moveId){mustChange=true}if(mustChange){if(whichMoveId>1){chess.selectPosition(whichMoveId-1,whichLineId);
}else{chess.selectPosition(lines[whichLineId][0].isContinuation||whichMoveId===1?1:0,whichLineId);chess.moveBackward()}}if(whichMoveId>0){
lines[whichLineId].length=whichMoveId}else if(whichLineId){lines[whichLineId]=null}else{lines[0].length=0}chess.reorderLines();return chess.ids();
};chess.mark=function(marking,remove){var move=moveId<0?chess._lines()[lineId]:chess._lines()[lineId][moveId];var type=marking.type;
var offset=1;if(marking.color){if(type==="arrow"){chess.mark({key:marking.color+marking.key,type:"cal"},remove)}else if(type==="square"){
chess.mark({key:marking.color+marking.key,type:"csl"},remove)}}if(type!=="cal"&&type!=="csl"){type="c_"+type;offset=0}if(move.commands&&move.commands[type]){
move.commands[type]=move.commands[type].split(",").filter(function rm(a){return a.slice(offset).split(";")[0]!==marking.key.slice(offset);
}).join(",");if(!move.commands[type]){delete move.commands[type]}}if(!remove){if(!move.commands){move.commands={}}move.commands[type]=(move.commands[type]?move.commands[type]+",":"")+marking.key+(marking.data?";"+marking.data.join(";"):"");
}};chess.markings=function(){var markings={};var move=moveId<0?chess._lines()[lineId]:chess._lines()[lineId][moveId];var i;var type;
var command;var o={cal:"arrow",csl:"square"};var extracType;var marks;var len;var data;var key;for(type in move.commands){command=move.commands[type];
if(o[type]){type=o[type];extracType=0}else if(type.substr(0,2)==="c_"){type=type.slice(2);extracType=1}else{continue}markings[type]=markings[type]||{};
marks=command.split(",");len=marks.length;for(i=0;i<len;++i){if(extracType){data=marks[i].split(";");key=data.shift();markings[type][key]=markings[type][key]||{
type:type,key:key};markings[type][key].data=data}else{key=marks[i].slice(1);markings[type][key]=markings[type][key]||{type:type,key:key
};markings[type][key].color=marks[i][0]}}}return markings};chess.clearMarkings=function(){var move=moveId<0?chess._lines()[lineId]:chess._lines()[lineId][moveId];
var type;for(type in move.commands){if(/^c[sa]l$|^c_/.test(type)){delete move.commands[type]}}};chess.pgn=function(options){var ids=chess.ids();
var pgn;chess.selectLineEnd(0);pgn=orig.pgn(options);chess.selectPosition(ids.move,ids.line);return pgn};chess.loadMoves=function(moves,options){
var i;var len;var curLine;var move;options=options||{};if(typeof moves==="string"){moves=decodeTCN(moves)}if(moves){if(!options.atCurrent){
chess.selectPosition(-1,0)}curLine=lineId;len=moves.length;for(i=0;i<len;++i){move=chess.move(moves[i],true);if(!move){moves[i].promotion=options.autoPromote===true?"q":options.autoPromote;
move=chess.move(moves[i],true);if(!move){return false}}if(lineId!==curLine&&options.method!=="merge"){chess.promoteVariation(lineId,1);
if(options.method!=="promote"){chess._history()[moveId].lines=undefined;chess.reorderLines()}curLine=lineId}}if(options.method!=="merge"&&options.method!=="promote"){
chess.deletePosition(moveId+1,lineId)}}return true}}}function createGame(options){var chess;var moves;options=options||{};if(options.game){
return options.game}chess=Chess();if(options.analysis){extendChess(chess)}if(options.disableHashing){chess.hashing(false)}if(options.pgn){
if(!chess.loadPgn(options.pgn,options.index,options.options)){return false}}else{if(options.headers){options.variant=options.headers.Variant||options.variant;
if(!options.fen){options.fen=options.headers.FEN}}if((options.fen||options.variant)&&!chess.load(options.fen||DEFAULT_POSITION,options.variant)){
return false}if(options.headers&&typeof options.headers==="object"&&!Array.isArray(options.headers)){chess.header(options.headers);
}}if(options.tcn){if(typeof options.tcn==="object"){if(!playBughouseTCN(chess,options.tcn,options.timestamps||[[],[]])){return false;
}}else{moves=decodeTCN(options.tcn)}}else{moves=options.moves}if(moves&&!makeMoves(chess,moves,options,options.timestamps)){return false;
}return chess}function generatePgn(options){var chess;options=options||{};options.disableHashing=true;chess=createGame(options);if(!chess){
return false}return chess.pgn(options)}function pgnToFen(pgn,ply){var moveCount;var fens=[];var i;chessJS.reset();if(!chessJS.loadPgn(pgn)){
return false}moveCount=chessJS.moveCount();if(typeof ply==="number"){if(ply<0){ply=moveCount+ply+1}for(i=moveCount-1;i>=ply&&i>=0;i-=1){
chessJS.undo()}return chessJS.fen()}for(i=0;i<=moveCount;i+=1){fens.unshift(chessJS.fen());chessJS.undo()}return fens}function normalizeMoveObj(move){
if(move){if(move.piece&WAS_PROMOTED){move.promoted=true}move.piece=JCE_PIECE_MAP[move.piece&TYPE_MASK];if(move.captured){if(move.captured&WAS_PROMOTED){
move.capturedPromotedPawn=true}move.captured=JCE_PIECE_MAP[move.captured&PIECE_MASK]}if(move.promotion){move.promotion=JCE_PIECE_MAP[move.promotion&TYPE_MASK];
}if(move.drop!==undefined){move.drop=JCE_DROP_PIECE_MAP[move.drop]}}return move}function normalizeHistory(chess){var moves=chess.history(true,true);
var siblingMoves;var allMoves;var totalMoves;var i;var whichMove;var move;var linesNum;if(chess.siblingGame){siblingMoves=chess.siblingGame.history(true,true);
totalMoves=moves.length+siblingMoves.length;allMoves=[];for(i=0;i<totalMoves;++i){if(!moves.length||siblingMoves.length&&siblingMoves[0].bughouseOrder<moves[0].bughouseOrder){
whichMove=siblingMoves.shift();whichMove.board="b"}else{whichMove=moves.shift();whichMove.board="a"}allMoves.push(whichMove)}moves=allMoves;
}totalMoves=moves.length;for(i=0;i<totalMoves;++i){move=moves[i];if(!move.fen){normalizeMoveObj(move)}if(move.lines){for(linesNum=move.lines.length-1;linesNum>=0;--linesNum){
chess.selectLine(move.lines[linesNum]);move.lines[linesNum]=normalizeHistory(chess).moves}}}return{moves:moves}}function pgnToJson(pgn,index,options){
var games=[];var tokenizedGames;var chess=chessJS;if(typeof index!=="number"){options=index;index=undefined}tokenizedGames=chess.tokenizePgn(pgn,options);
if(index<0){index=tokenizedGames.length+index}if(!tokenizedGames){return false}if(options&&options.includeFen){chess=createGame({
analysis:true})}tokenizedGames.forEach(function(tokens,i){var headers;var history;if(i===index||index===undefined){if(chess.loadPgn([tokens],0,options)){
history=normalizeHistory(chess);headers=chess.header();games.push({headers:headers,moves:history.moves})}else{games.push(false)}}else{
games.push(undefined)}});if(typeof index==="number"){return games[index]}return games}function sanToObj(san,fen,variant){chessJS.reset();
if(!chessJS.load(fen,variant)){return false}return normalizeMoveObj(chessJS.move(san))}function shortenFen(fen,len){return chessJS.completeFen(fen).split(" ").slice(0,len||4).join(" ");
}function getFenFromMoves(fen,moves,variant){chessJS.reset();chessJS.load(fen,variant);if(moves&&!makeMoves(chessJS,moves)){return false;
}return chessJS.fen()}function getPremoves(fen,color,variant){var moves=[];var rank;var file;var piece;var blankBoard;var square;var castling;
var kingFile;var kingRank;function pawnCapture(pawnTo){var san=square[0]+"x"+pawnTo;var i;if(color===1&&rank===7||color===2&&rank===2){
for(i=4;i>0;--i){moves.push({color:color,to:pawnTo,flags:chessJS.FLAGS.CAPTURE|chessJS.FLAGS.PROMOTION,from:square,promotion:1<<i+2,
piece:4,san:san+"="+JCE_DROP_PIECE_MAP[i].toUpperCase()})}}else if(!(rank===1&&color===2)&&!(rank===8&&color===1)){moves.push({color:color,
to:pawnTo,flags:chessJS.FLAGS.CAPTURE,from:square,piece:4,san:san})}}if(color!==1&&color!==2||!chessJS.load(fen,variant||"chess")){
return null}fen=chessJS.fen();blankBoard=Chess();blankBoard.clear();if(variant){blankBoard.header({Variant:variant})}chessJS.turn(color);
blankBoard.turn(color);for(rank=1;rank<9;++rank){for(file=1;file<9;++file){square=String.fromCharCode(file+96)+rank;piece=chessJS.get(square);
if(piece){chessJS.remove(square,true);if(piece.color===color){if(piece.type==="p"){if(file>1){pawnCapture(String.fromCharCode(file-1+96)+(rank+(color===1?1:-1)));
}if(file<8){pawnCapture(String.fromCharCode(file+1+96)+(rank+(color===1?1:-1)))}}else if(piece.type==="k"){kingFile=square[0];kingRank=rank;
}blankBoard.put(piece,square,true);moves=moves.concat(blankBoard.moves({verbose:true}));blankBoard.remove(square,true)}}}}castling=fen.split(" ")[2];
if(castling!=="-"){castling.split("").forEach(function(flag){if(color===1&&flag<"a"||color===2&&flag>="a"){flag=flag.toLowerCase();
if(flag==="k"){moves.push({color:color,to:"g"+kingRank,flags:chessJS.FLAGS.KSIDE_CASTLE,from:"e"+kingRank,piece:128,san:"O-O"})}else if(flag==="q"){
moves.push({color:color,to:"c"+kingRank,flags:chessJS.FLAGS.QSIDE_CASTLE,from:"e"+kingRank,piece:128,san:"O-O-O"})}else{if(flag>kingFile){
moves.push({color:color,to:flag+kingRank,flags:chessJS.FLAGS.KSIDE_CASTLE,from:kingFile+kingRank,piece:128,san:"O-O"})}else{moves.push({
color:color,to:flag+kingRank,flags:chessJS.FLAGS.QSIDE_CASTLE,from:kingFile+kingRank,piece:128,san:"O-O-O"})}}}})}moves=moves.concat(chessJS.moves({
verbose:true}));moves.forEach(function(move){normalizeMoveObj(move)});return moves}function getLegalMoves(gameSetup,variant){var moves;
var chess;var i;var len;if(typeof gameSetup==="string"){chess=chessJS;if(!chess.load(gameSetup,variant)){return null}}else{chess=createGame(gameSetup);
}moves=chess.moves({verbose:true});len=moves.length;for(i=0;i<len;++i){normalizeMoveObj(moves[i])}return moves}function getPositionInfo(gameSetup,moves,options){
var variant;var res={gameOver:false,check:false,checkmate:false,draw:false,stalemate:false,threefold:false,insufficient:false};var legalMoves;
var chess;if(!Array.isArray(moves)){options=moves;moves=null}if(typeof options==="boolean"){variant=options;options={}}else{options=options||{};
variant=options.variant}if(typeof gameSetup==="string"){chess=chessJS;if(chess.validateFen(gameSetup,variant)!==0||!chess.load(gameSetup,variant)){
return false}}else{chess=createGame(gameSetup)}if(moves&&!makeMoves(chess,moves)){return false}if(options.getLegalMoves){legalMoves=getLegalMoves({
game:chess});res.legalMoves=legalMoves}else{legalMoves=chess.moves()}if(chess.inCheck()){res.check=true;res.checkmate=legalMoves.length===0;
}else{res.stalemate=legalMoves.length===0}if(options.premove){options.check=false;options.kings=false}res.threefold=chess.inThreefoldRepetition();
res.insufficient=chess.insufficientMaterial(options.color);res.fiftyMoveRule=chess.in50MoveRule();res.draw=res.stalemate||res.threefold||res.insufficient||res.fiftyMoveRule||chess.inDraw();
if(!options.skipValidation){res.isValid=chess.isPositionValid(options)}if(variant){res.variantWin=chess.isVariantWin();if(res.variantWin===undefined){
res.variantWin=chess.isBughouseWin()}}res.gameOver=res.checkmate||res.draw||Boolean(res.variantWin);return res}function isFenValid(fen,variant){
return chessJS.validateFen(fen,variant)===0}function loadECO(path,cb){BOOK_READER.loadBook(path,function onload(err,book){if(!book||!book.json){
return cb(err||new Error("Invalid book"))}cb(err,function queryECO(options){var game;var hashes;var i;var hashLen;var position;var currentEco;
var ecoObj;var pos;var nextEco;if(options.hash){if(typeof options.hash==="string"){hashes=[BOOK_READER.hex64ToDec(options.hash)]}else{
hashes=[options.hash]}hashLen=1}else{game=createGame(options);if(!game){return false}hashes=game.hashes();hashLen=hashes.length}for(i=0;i<hashLen;++i){
position=book.json[BOOK_READER.to64BitHex(hashes[i])];if(position){if(position.constructor===Array){if(currentEco&&position[0].m.indexOf(currentEco.m)===-1){
for(pos=position.length-1;pos>=0;--pos){if(!pos||position[pos].m.indexOf(currentEco.m)!==-1){nextEco=position[pos];nextEco.e=position[0].e;
nextEco.s=position[0].s;nextEco.mate=position[0].mate;nextEco.v=position[0].v;nextEco.h=position[0].h;nextEco.n=nextEco.n||position[0].n;
nextEco.u=nextEco.u||position[0].u;nextEco.c=nextEco.c||position[0].c;break}}}else{nextEco=position[0]}}else{nextEco=position}if(nextEco.n||options.allowNameless){
currentEco=nextEco}}else if(options.mustEndInBook){currentEco=undefined}}if(currentEco){ecoObj={name:currentEco.n};if(currentEco.m){
ecoObj.moves=currentEco.m}if(currentEco.d!==undefined){ecoObj.sdiff=currentEco.d/100}if(currentEco.u){ecoObj.url=currentEco.u;ecoObj.code=ecoObj.url.substr(0,3);
}else if(currentEco.n&&currentEco.c){ecoObj.url=currentEco.c+"-"+currentEco.n.replace(/['+,]/g,"").replace(/[^a-z0-9.]+/gi,"-").replace(/(with-\d|St)\.+-?/,"$1-");
ecoObj.code=currentEco.c}if(currentEco.e){ecoObj.eval=currentEco.e;ecoObj.depth=currentEco.h;ecoObj.score=currentEco.e[0].cp/100;if(currentEco.e[0].mate!==undefined){
ecoObj.mate=currentEco.e[0].mate}}else{ecoObj.score=currentEco.s/100;if(currentEco.mate!==undefined){ecoObj.mate=currentEco.mate}
}if(currentEco.v){ecoObj.bad=true}return ecoObj}},book.json)})}function jce(options,cbLoadEngine){loadEngine=loadEngine||ENGINE_MANAGER(jce);
return loadEngine(options,cbLoadEngine)}jce.gameFingerprints=gameFingerprints;jce.getFenFromMoves=getFenFromMoves;jce.getLegalMoves=getLegalMoves;
jce.getPremoves=getPremoves;jce.getPositionInfo=getPositionInfo;jce.isFenValid=isFenValid;jce.encodeTCN=encodeTCN;jce.decodeTCN=decodeTCN;
jce.uciToObj=uciToObj;jce.generatePgn=generatePgn;jce.pgnToFen=pgnToFen;jce.pgnToJson=pgnToJson;jce.sanToObj=sanToObj;jce.completeFen=chessJS.completeFen;
jce.shortenFen=shortenFen;jce.createGame=createGame;jce.getPositionDetails=getPositionDetails;jce.predict=predict;jce.FLAGS=chessJS.FLAGS;
jce.loadECO=loadECO;return jce}();return JCE}();
//# sourceMappingURL=jschessengine.min.js.map